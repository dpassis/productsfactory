/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConfiguracaoIP.java
 *
 * Created on 18/05/2013, 12:36:38
 */
package productsfactory.view;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import productsfactory.model.Usuario;
import productsfactory.useful.TelaUteis;

/**
 *
 * @author Daniel
 */
public class ConfiguracaoIP extends javax.swing.JDialog {

    private static Usuario user;
    private static ConfiguracaoIP jdialogConfigIP = null;

    /**
     * Singleton Recupera instância do formulário
     * 
     * @param janela
     * @param usuario
     * @return instância do formulário
     */
    public static ConfiguracaoIP getDialogConfigIP(java.awt.Frame janela, Usuario usuario) throws FileNotFoundException {

        if (jdialogConfigIP == null) {
            jdialogConfigIP = new ConfiguracaoIP(janela, true, usuario);
        }
        return jdialogConfigIP;
    }

    /** Creates new form ConfiguracaoIP */
    public ConfiguracaoIP(java.awt.Frame parent, boolean modal, Usuario usuario) throws FileNotFoundException {
        super(parent, modal);
        initComponents();
        this.inicializa();
        user = usuario;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConfiguracaoIP = new interfacegrafica.dpa.panels.PanelDPA();
        labelTituloDPA1 = new interfacegrafica.dpa.labels.LabelTituloDPA();
        lblIP = new interfacegrafica.dpa.labels.LabelDPA();
        lblBanco = new interfacegrafica.dpa.labels.LabelDPA();
        tfIP = new interfacegrafica.dpa.textfield.TextFieldDPA();
        tfBanco = new interfacegrafica.dpa.textfield.TextFieldDPA();
        btnSalvar = new interfacegrafica.dpa.buttons.ButtonSimplesDPA();
        btnCancelar = new interfacegrafica.dpa.buttons.ButtonSimplesDPA();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuração IP");

        labelTituloDPA1.setText("Configuração IP/Banco");

        lblIP.setText("IP:");

        lblBanco.setText("Banco:");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfiguracaoIPLayout = new javax.swing.GroupLayout(pnlConfiguracaoIP);
        pnlConfiguracaoIP.setLayout(pnlConfiguracaoIPLayout);
        pnlConfiguracaoIPLayout.setHorizontalGroup(
            pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguracaoIPLayout.createSequentialGroup()
                .addGroup(pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfiguracaoIPLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(labelTituloDPA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlConfiguracaoIPLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfBanco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfIP, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)))
                    .addGroup(pnlConfiguracaoIPLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        pnlConfiguracaoIPLayout.setVerticalGroup(
            pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfiguracaoIPLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelTituloDPA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlConfiguracaoIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72))
        );

        getContentPane().add(pnlConfiguracaoIP, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
// TODO add your handling code here:
    this.dispose();
}//GEN-LAST:event_btnCancelarActionPerformed

private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
    try {

        if (this.alteraConfig()) {

            JOptionPane.showMessageDialog(this, "Configuração Salva com sucesso", "Configuração IP", 1);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao configurar!!!", "Configuração IP", 0);
        }
    } catch (URISyntaxException ex) {
        Logger.getLogger(ConfiguracaoIP.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnSalvarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private interfacegrafica.dpa.buttons.ButtonSimplesDPA btnCancelar;
    private interfacegrafica.dpa.buttons.ButtonSimplesDPA btnSalvar;
    private interfacegrafica.dpa.labels.LabelTituloDPA labelTituloDPA1;
    private interfacegrafica.dpa.labels.LabelDPA lblBanco;
    private interfacegrafica.dpa.labels.LabelDPA lblIP;
    private interfacegrafica.dpa.panels.PanelDPA pnlConfiguracaoIP;
    private interfacegrafica.dpa.textfield.TextFieldDPA tfBanco;
    private interfacegrafica.dpa.textfield.TextFieldDPA tfIP;
    // End of variables declaration//GEN-END:variables

    /**
     * Carrega as configurações atuais de IP e Banco
     */
    private void carregaConfigAtual() {
       
        try {

            
            InputStream arquivoURL = getClass().getResourceAsStream("/sistemaoficinamusica/config/conexao.properties");
            Properties config = new Properties();
        
            config.load(arquivoURL);

            this.tfIP.setText(config.getProperty("ip"));
            this.tfBanco.setText(config.getProperty("banco"));
            arquivoURL.close();

        } catch (IOException ex) {
            Logger.getLogger(ConfiguracaoIP.class.getName()).log(Level.SEVERE, null, ex);
        } 

    }

    /**
     * Altera as configurações de IP e Banco
     * @return <code> boolean</code> de Confirmação true = Ok and false = falha
     * @throws URISyntaxException 
     */
    private boolean alteraConfig() throws URISyntaxException {

        URI arquivo = getClass().getResource("/sistemaoficinamusica/config/conexao.properties").toURI();

        File file = new File(arquivo);
        
          

        Properties config = new Properties();
        try {
            FileInputStream fis = new FileInputStream(file);
            config.load(fis);

            config.setProperty("ip", this.tfIP.getText());
            config.setProperty("banco", this.tfBanco.getText());

            FileOutputStream fos = new FileOutputStream(file);
            config.store(fos, "Configuração IP e Banco:");
            fos.close();


            return true;

        } catch (IOException ex) {
            Logger.getLogger(ConfiguracaoIP.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }

    }
    /**
     * 
     */
    private void addWindowListener() {

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent evt) {
                System.gc();
                jdialogConfigIP = null;
            }
        });
    }
    /**
     * Configurações de Inicialização do Form
     */
    private void inicializa() throws FileNotFoundException {
        TelaUteis.locateOnScreen(this, 468, 300);
        this.carregaConfigAtual();
        this.addWindowListener();
      
       
    }
}
