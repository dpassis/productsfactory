/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UsuariosView.java
 *
 * Created on Feb 5, 2013, 4:08:54 PM
 */
package productsfactory.view;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.JTableHeader;
import productsfactory.control.UsuarioControl;
import productsfactory.model.Usuario;
import productsfactory.tables.TableUsuarios;
import productsfactory.useful.MailUteis;
import productsfactory.useful.TelaUteis;

/**
 *
 * @author Daniel
 */
public class UsuariosView extends javax.swing.JDialog {

    private Integer codigoUsuario = null;
    private static Usuario user = null;
    private static UsuariosView jdialogUsuarios = null;

    public static UsuariosView getDialogUsuarios(java.awt.Frame janela, Usuario usuario) throws SQLException {

        if (jdialogUsuarios == null) {
            jdialogUsuarios = new UsuariosView(janela, true, usuario);

        }
        return jdialogUsuarios;
    }

    /** Creates new form UsuariosView */
    public UsuariosView(java.awt.Frame parent, boolean modal, Usuario usuario) throws SQLException {
        super(parent, modal);

        initComponents();
        user = usuario;
        inicializa();
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUsuarios = new interfacegrafica.dpa.panels.PanelDPA();
        lblUsuario = new interfacegrafica.dpa.labels.LabelDPA();
        tfUsuario = new interfacegrafica.dpa.textfield.TextFieldDPA();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        btnLimpar = new interfacegrafica.dpa.buttons.ButtonLimparDPA();
        btnSalvar = new interfacegrafica.dpa.buttons.ButtonSalvarDPA();
        btnExcluir = new interfacegrafica.dpa.buttons.ButtonExcluirDPA();
        btnAtualizar = new interfacegrafica.dpa.buttons.ButtonAtualizarDPA();
        lblUser = new interfacegrafica.dpa.icons.IconUserDPA();
        pwfSenha = new interfacegrafica.dpa.password.PasswordFieldDPA();
        lblSenha = new interfacegrafica.dpa.labels.LabelDPA();
        pwfConfSenha = new interfacegrafica.dpa.password.PasswordFieldDPA();
        lblConfSenha = new interfacegrafica.dpa.labels.LabelDPA();
        cmbTipoUsuario = new interfacegrafica.dpa.combobox.ComboboxDPA();
        lblTipoUsuario = new interfacegrafica.dpa.labels.LabelDPA();
        labelMensagemVermelholDPA1 = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();
        labelMensagemVermelholDPA2 = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();
        labelMensagemVermelholDPA3 = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();
        labelMensagemVermelholDPA4 = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();
        cmbStatusUsuario = new interfacegrafica.dpa.combobox.ComboboxDPA();
        lblStatusUsuario = new interfacegrafica.dpa.labels.LabelDPA();
        tfEmailUsuario = new interfacegrafica.dpa.textfield.TextFieldDPA();
        lblEmailUsuario = new interfacegrafica.dpa.labels.LabelDPA();
        labelMensagemVermelholDPA5 = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Usuários");

        lblUsuario.setText("Usuário:(letras e números)");

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        btnLimpar.setText("");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSalvar.setText("");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setText("");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnAtualizar.setText("");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        lblUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productsfactory/images/usuarios.jpg"))); // NOI18N

        lblSenha.setText("Senha:");

        lblConfSenha.setText("Conf. Senha:");

        lblTipoUsuario.setText("Tipo Usuário:");

        labelMensagemVermelholDPA1.setText("*");

        labelMensagemVermelholDPA2.setText("*");

        labelMensagemVermelholDPA3.setText("*");

        labelMensagemVermelholDPA4.setText("(*) Campos Obrigatórios");

        cmbStatusUsuario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ativo", "Inativo" }));

        lblStatusUsuario.setText("Status Usuário:");

        lblEmailUsuario.setText("Email Usuário:");

        labelMensagemVermelholDPA5.setText("*");

        javax.swing.GroupLayout pnlUsuariosLayout = new javax.swing.GroupLayout(pnlUsuarios);
        pnlUsuarios.setLayout(pnlUsuariosLayout);
        pnlUsuariosLayout.setHorizontalGroup(
            pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsuariosLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelMensagemVermelholDPA2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMensagemVermelholDPA3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMensagemVermelholDPA5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUsuariosLayout.createSequentialGroup()
                        .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlUsuariosLayout.createSequentialGroup()
                                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pwfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addComponent(labelMensagemVermelholDPA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblConfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pwfConfSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlUsuariosLayout.createSequentialGroup()
                                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblStatusUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbStatusUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                        .addComponent(lblTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbTipoUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)))))
                        .addGap(46, 46, 46))
                    .addGroup(pnlUsuariosLayout.createSequentialGroup()
                        .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmailUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfEmailUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlUsuariosLayout.createSequentialGroup()
                                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlUsuariosLayout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(labelMensagemVermelholDPA4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        pnlUsuariosLayout.setVerticalGroup(
            pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsuariosLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlUsuariosLayout.createSequentialGroup()
                        .addComponent(lblStatusUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbStatusUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMensagemVermelholDPA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pwfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwfConfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMensagemVermelholDPA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMensagemVermelholDPA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEmailUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEmailUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMensagemVermelholDPA5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlUsuariosLayout.createSequentialGroup()
                        .addGroup(pnlUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMensagemVermelholDPA4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        getContentPane().add(pnlUsuarios, java.awt.BorderLayout.LINE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
// TODO add your handling code here:
    this.limpaCampos();
}//GEN-LAST:event_btnLimparActionPerformed

private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
// TODO add your handling code here:
    UsuarioControl usuarioControl = new UsuarioControl();
    if (this.verificaCampos()) {
        if (Arrays.equals(this.pwfSenha.getPassword(), this.pwfConfSenha.getPassword())) {
            try {
                if (!usuarioControl.verificaUsuarioExistente(this.getDataUsuarios())) {
                    if (usuarioControl.inserirUsuario(this.getDataUsuarios())) {
                        MailUteis.enviaEmailUsuario(this.tfEmailUsuario.getText(), this.tfUsuario.getText(),
                                String.valueOf(this.pwfSenha.getPassword()));
                        EnviaEmailProgress enviaEmailProgress = new EnviaEmailProgress(this, true);
                        enviaEmailProgress.setVisible(true);
                        JOptionPane.showMessageDialog(null, "Inserido com Sucesso!", "Usuários", 1);
                       // ControleUsuario.insereAcoesUsuario("Inseriu o usuário : " + this.tfUsuario.getText() + "", user);
                        this.tableUsuarios();



                    } else {
                        JOptionPane.showMessageDialog(null, "Não pode ser inserido!", "Usuários", 0);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Já existe um usuário com esse nome.", "Usuários", 1);
                }
            } catch (SQLException ex) {
                Logger.getLogger(UsuariosView.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Senhas diferentes!", "Usuários", 2);
        }
    }
}//GEN-LAST:event_btnSalvarActionPerformed

private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
// TODO add your handling code here:
    if (evt.getClickCount() == 1) {

        codigoUsuario = Integer.parseInt(tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0).toString());
        this.tfUsuario.setText(tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 1).toString());
        this.cmbTipoUsuario.setSelectedItem(tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 3).toString());
        this.tfEmailUsuario.setText(tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 4).toString());
        this.cmbStatusUsuario.setSelectedItem(tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 5).toString());




        this.tfUsuario.setEditable(false);
        this.btnSalvar.setVisible(false);
        this.btnAtualizar.setVisible(true);
        this.btnExcluir.setVisible(true);

    }
}//GEN-LAST:event_tblUsuariosMouseClicked

private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
// TODO add your handling code here:
    UsuarioControl usuarioControl = new UsuarioControl();

    try {
        int option = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja excluir esse usuário?\n\r"
                + "A exclusão do usuário acarretará na perda de todos os dados de acesso e ações do usuário no sistema.\n\r"
                + "Caso queira manter esses dados inative o usuário.", "Usuários", JOptionPane.YES_NO_OPTION, 3);

        if (option == 0) {
            if (usuarioControl.excluirUsuario(this.getDataUsuarios())) {

                JOptionPane.showMessageDialog(null, "Excluído com Sucesso!", "Usuários", 1);
               // ControleUsuario.insereAcoesUsuario("Excluiu o usuário : " + this.tfUsuario.getText() + "", user);
                this.tableUsuarios();
                this.limpaCampos();

            } else {
                JOptionPane.showMessageDialog(null, "Não pode ser excluído!", "Usuários", 0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Exclusão cancelada pelo usuário.", "Usuários", 1);
        }
    } catch (SQLException ex) {
        Logger.getLogger(UsuariosView.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnExcluirActionPerformed

private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
// TODO add your handling code here:
    UsuarioControl usuarioControl = new UsuarioControl();


    if (Arrays.equals(this.pwfSenha.getPassword(), this.pwfConfSenha.getPassword())) {
        try {
            int option = JOptionPane.showConfirmDialog(this, "Confirma atualização?", "Usuários", JOptionPane.YES_NO_OPTION, 3);

            if (option == 0) {
                if (usuarioControl.atualizarUsuario(this.getDataUsuarios())) {

                    JOptionPane.showMessageDialog(null, "Atualizado com Sucesso!", "Usuários", 1);
                   // ControleUsuario.insereAcoesUsuario("Atualizou o usuário : " + this.tfUsuario.getText() + "", user);
                    this.tableUsuarios();

                } else {
                    JOptionPane.showMessageDialog(null, "Não pode ser atualizado!", "Usuários", 0);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(UsuariosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Senhas Diferentes!", "Usuários", 2);
    }

}//GEN-LAST:event_btnAtualizarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private interfacegrafica.dpa.buttons.ButtonAtualizarDPA btnAtualizar;
    private interfacegrafica.dpa.buttons.ButtonExcluirDPA btnExcluir;
    private interfacegrafica.dpa.buttons.ButtonLimparDPA btnLimpar;
    private interfacegrafica.dpa.buttons.ButtonSalvarDPA btnSalvar;
    private interfacegrafica.dpa.combobox.ComboboxDPA cmbStatusUsuario;
    private interfacegrafica.dpa.combobox.ComboboxDPA cmbTipoUsuario;
    private javax.swing.JScrollPane jScrollPane1;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA labelMensagemVermelholDPA1;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA labelMensagemVermelholDPA2;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA labelMensagemVermelholDPA3;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA labelMensagemVermelholDPA4;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA labelMensagemVermelholDPA5;
    private interfacegrafica.dpa.labels.LabelDPA lblConfSenha;
    private interfacegrafica.dpa.labels.LabelDPA lblEmailUsuario;
    private interfacegrafica.dpa.labels.LabelDPA lblSenha;
    private interfacegrafica.dpa.labels.LabelDPA lblStatusUsuario;
    private interfacegrafica.dpa.labels.LabelDPA lblTipoUsuario;
    private interfacegrafica.dpa.icons.IconUserDPA lblUser;
    private interfacegrafica.dpa.labels.LabelDPA lblUsuario;
    private interfacegrafica.dpa.panels.PanelDPA pnlUsuarios;
    private interfacegrafica.dpa.password.PasswordFieldDPA pwfConfSenha;
    private interfacegrafica.dpa.password.PasswordFieldDPA pwfSenha;
    private javax.swing.JTable tblUsuarios;
    private interfacegrafica.dpa.textfield.TextFieldDPA tfEmailUsuario;
    private interfacegrafica.dpa.textfield.TextFieldDPA tfUsuario;
    // End of variables declaration//GEN-END:variables

    private Usuario getDataUsuarios() {

        Usuario usuario = new Usuario();
        usuario.setCodigoUsuario(codigoUsuario);
        usuario.setNomeUsuario(this.tfUsuario.getText().toLowerCase());
        if (!String.valueOf(this.pwfSenha.getPassword()).isEmpty() && !String.valueOf(this.pwfConfSenha.getPassword()).isEmpty()) {
            usuario.setSenhaUsuario(String.valueOf(this.pwfSenha.getPassword()));
        }
        usuario.setCategoriaUsuario(this.cmbTipoUsuario.getSelectedItem().toString());
        usuario.setEmailUsuario(this.tfEmailUsuario.getText());
        usuario.setStatusUsuario(this.cmbStatusUsuario.getSelectedItem().toString());

        return usuario;

    }

    private void limpaCampos() {

        this.tfUsuario.setEditable(true);
        this.tfUsuario.setText("");
        this.tfEmailUsuario.setText("");
        this.pwfSenha.setText("");
        this.pwfConfSenha.setText("");
        this.btnSalvar.setVisible(true);
        this.btnAtualizar.setVisible(false);
        this.btnExcluir.setVisible(false);
        this.cmbTipoUsuario.setEnabled(true);
        this.tfUsuario.setEditable(true);

    }

    private boolean verificaCampos() {

        Integer cont = 0;

        if (this.tfUsuario.getText().isEmpty()) {
            cont += 1;
            JOptionPane.showMessageDialog(this, "Nome do usuário obrigatório!", "Usuários", 2);
        }

        if (this.tfEmailUsuario.getText().isEmpty()) {
            cont += 1;
            JOptionPane.showMessageDialog(this, "Email do usuário obrigatório!\r\n"
                    + "Insira um email válido a senha do usuário será encaminhada para esse email.", "Usuários", 2);
        }

        if (String.valueOf(this.pwfSenha.getPassword()).isEmpty()) {
            cont += 1;
            JOptionPane.showMessageDialog(this, "Senha do usuário é obrigatória!", "Usuários", 2);
        }

        if (String.valueOf(this.pwfConfSenha.getPassword()).isEmpty()) {
            cont += 1;
            JOptionPane.showMessageDialog(this, "Confirmação de Senha do usuário é obrigatória!", "Usuários", 2);
        }

        if (!this.tfUsuario.getText().matches("[A-Za-z0-9]+")) {
            cont += 1;
            JOptionPane.showMessageDialog(this, "Não são permitido caracteres especiais no nome do Usuário", "Usuários", 2);
        }

        if (cont == 0) {
            return true;
        } else {
            return false;
        }
    }

    private JTable tableUsuarios() throws SQLException {

        List<Usuario> listUsuarios = UsuarioControl.listaUsuarios();
        TableUsuarios model = new TableUsuarios();
        tblUsuarios.setModel(model);

        JTableHeader th = tblUsuarios.getTableHeader();
        th.setFont(new Font("Arial", Font.BOLD, 13));
        th.setBackground(new Color(185, 211, 238));

        tblUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
        tblUsuarios.getColumnModel().getColumn(0).setPreferredWidth(0);
        tblUsuarios.getColumnModel().getColumn(0).setMaxWidth(0);

        tblUsuarios.getColumnModel().getColumn(2).setMinWidth(0);
        tblUsuarios.getColumnModel().getColumn(2).setPreferredWidth(0);
        tblUsuarios.getColumnModel().getColumn(2).setMaxWidth(0);

        tblUsuarios.getColumnModel().getColumn(4).setMinWidth(0);
        tblUsuarios.getColumnModel().getColumn(4).setPreferredWidth(0);
        tblUsuarios.getColumnModel().getColumn(4).setMaxWidth(0);

        model.setUsuarios(listUsuarios);
        return tblUsuarios;
    }
    
    private void  populalistaTipoUser(){

        cmbTipoUsuario.addItem("userSystem");
        cmbTipoUsuario.addItem("admSystem");
        
        
    }
    
    private void  populalistaTipoUserForRoot(){

        cmbTipoUsuario.addItem("userSystem");
        cmbTipoUsuario.addItem("admSystem");
        cmbTipoUsuario.addItem("root");
        
        
    }

    private void addWindowListener() {

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent evt) {
                System.gc();
                jdialogUsuarios = null;
            }
        });
    }

    private void inicializa() throws SQLException {
        this.addWindowListener();
        this.btnSalvar.setVisible(true);
        this.btnAtualizar.setVisible(false);
        this.btnExcluir.setVisible(false);
        
        if(user.getCategoriaUsuario().equals("admSystem")){
            this.populalistaTipoUser();
        }else if(user.getCategoriaUsuario().equals("root")){
            this.populalistaTipoUserForRoot();
        }
        tableUsuarios();
        TelaUteis.locateOnScreen(this, 609, 600);

    }
}
