/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConfiguracoesUsuarios.java
 *
 * Created on 19/05/2013, 01:18:56
 */
package productsfactory.view;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import productsfactory.model.Usuario;
import productsfactory.useful.TelaUteis;

/**
 *
 * @author Daniel
 */
public class ConfiguracoesUsuarios extends javax.swing.JDialog {

    private static Usuario user = null;
    private static ConfiguracoesUsuarios jDialogConfiguracoesUser = null;

    /**
     * Singleton recupera instância do formulário
     * 
     * @param janela
     * @param usuario
     * @return instância do formulário
     */
    public static ConfiguracoesUsuarios getDialogAlteraSenha(java.awt.Frame janela, Usuario usuario) {

        if (jDialogConfiguracoesUser == null) {
            jDialogConfiguracoesUser = new ConfiguracoesUsuarios(janela, true, usuario);
        }
        return jDialogConfiguracoesUser;
    }

    /** Creates new form ConfiguracoesUsuarios */
    public ConfiguracoesUsuarios(java.awt.Frame parent, boolean modal, Usuario usuario) {
        super(parent, modal);
        initComponents();
        user = usuario;
        this.inicializa();
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelDPA1 = new interfacegrafica.dpa.panels.PanelDPA();
        lblTiposUsuario = new interfacegrafica.dpa.labels.LabelDPA();
        pnlAcompanheCadastro = new javax.swing.JPanel();
        pnlAcompanheCadastro1 = new javax.swing.JPanel();
        chCadastroAlunos = new javax.swing.JCheckBox();
        chCadastroFuncionarios = new javax.swing.JCheckBox();
        chCadastroUsuarios = new javax.swing.JCheckBox();
        chCadastroCursos = new javax.swing.JCheckBox();
        chCadastroCargos = new javax.swing.JCheckBox();
        chCadastroSalas = new javax.swing.JCheckBox();
        chCadastroDespesas = new javax.swing.JCheckBox();
        chCadastros = new javax.swing.JCheckBox();
        pnlAcompanheCadastro2 = new javax.swing.JPanel();
        chRelatoriosAlunos = new javax.swing.JCheckBox();
        chTodosAlunos = new javax.swing.JCheckBox();
        chAlunosAtivosInativos = new javax.swing.JCheckBox();
        chAlunosAniversariantes = new javax.swing.JCheckBox();
        chAlunosInadimplentes = new javax.swing.JCheckBox();
        chAlunosCurso = new javax.swing.JCheckBox();
        chAlunosProfessor = new javax.swing.JCheckBox();
        chRelatorios = new javax.swing.JCheckBox();
        chAlunosContrato = new javax.swing.JCheckBox();
        chAlunosBoleto = new javax.swing.JCheckBox();
        chAlunosDesistentesCurso = new javax.swing.JCheckBox();
        chAlunosDesistentesProfessor = new javax.swing.JCheckBox();
        chAlunosIniciantesCurso = new javax.swing.JCheckBox();
        chAlunosIniciantesProfessor = new javax.swing.JCheckBox();
        chAlunosMarketing = new javax.swing.JCheckBox();
        chRelatoriosFuncionarios = new javax.swing.JCheckBox();
        chTodosFuncionarios = new javax.swing.JCheckBox();
        chFuncionariosAtivosInativos = new javax.swing.JCheckBox();
        chFuncionariosAniversariantes = new javax.swing.JCheckBox();
        chRelatoriosFinancas = new javax.swing.JCheckBox();
        chRelatoriosDespesas = new javax.swing.JCheckBox();
        chTodasDespesas = new javax.swing.JCheckBox();
        chDespesasSituacao = new javax.swing.JCheckBox();
        chBalanco = new javax.swing.JCheckBox();
        chDespesasCategoria = new javax.swing.JCheckBox();
        pnlAcompanheCadastro3 = new javax.swing.JPanel();
        chAlterarSenha = new javax.swing.JCheckBox();
        chTrocarUsuario = new javax.swing.JCheckBox();
        chEnviarEmail = new javax.swing.JCheckBox();
        chSair = new javax.swing.JCheckBox();
        chUsuarios = new javax.swing.JCheckBox();
        pnlAcompanheCadastro4 = new javax.swing.JPanel();
        chLogAcessoUsuario = new javax.swing.JCheckBox();
        chLogAcoesUsuario = new javax.swing.JCheckBox();
        chHorarioAulas = new javax.swing.JCheckBox();
        chConsultas = new javax.swing.JCheckBox();
        chTarefas = new javax.swing.JCheckBox();
        pnlAcompanheCadastro7 = new javax.swing.JPanel();
        chConfiguracaoIP = new javax.swing.JCheckBox();
        chConfiguracaoUsuario = new javax.swing.JCheckBox();
        chConfiguracoes = new javax.swing.JCheckBox();
        chConfiguracaoContrato = new javax.swing.JCheckBox();
        pnlAcompanheCadastro8 = new javax.swing.JPanel();
        chAbout = new javax.swing.JCheckBox();
        chHelp = new javax.swing.JCheckBox();
        chAjuda = new javax.swing.JCheckBox();
        pnlAcompanheCadastro5 = new javax.swing.JPanel();
        chPagamentosProfessores = new javax.swing.JCheckBox();
        chLancamentos = new javax.swing.JCheckBox();
        chPagamentosFuncionarios = new javax.swing.JCheckBox();
        pnlAcompanheCadastro6 = new javax.swing.JPanel();
        chVidaAluno = new javax.swing.JCheckBox();
        lblTipoUsuario = new interfacegrafica.dpa.labels.LabelDPA();
        cmbTipoUsuario = new interfacegrafica.dpa.combobox.ComboboxDPA();
        btnSalvar = new interfacegrafica.dpa.buttons.ButtonSimplesDPA();
        btnCancelar = new interfacegrafica.dpa.buttons.ButtonSimplesDPA();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        panelDPA1.setLayout(new java.awt.GridBagLayout());

        lblTiposUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Usuário", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N
        lblTiposUsuario.setForeground(new Color(185, 211, 238));
        lblTiposUsuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTiposUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistemaoficinamusica/images/usuario_menu_item.png"))); // NOI18N
        lblTiposUsuario.setText("   ");
        lblTiposUsuario.setToolTipText("Usuário conectado ao Sistema");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 296;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 74, 0, 0);
        panelDPA1.add(lblTiposUsuario, gridBagConstraints);

        pnlAcompanheCadastro.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Menu Principal", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        pnlAcompanheCadastro1.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastros", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chCadastroAlunos.setText("Cadastro Alunos");

        chCadastroFuncionarios.setText("Cadastro Funcionários");

        chCadastroUsuarios.setText("Cadastro Usuários");

        chCadastroCursos.setText("Cadastro Cursos");

        chCadastroCargos.setText("Cadastro Cargos");

        chCadastroSalas.setText("Cadastro Salas");

        chCadastroDespesas.setText("Cadastro Despesas");

        chCadastros.setText("Cadastros");
        chCadastros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chCadastrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAcompanheCadastro1Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro1);
        pnlAcompanheCadastro1.setLayout(pnlAcompanheCadastro1Layout);
        pnlAcompanheCadastro1Layout.setHorizontalGroup(
            pnlAcompanheCadastro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro1Layout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chCadastros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(pnlAcompanheCadastro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chCadastroDespesas)
                            .addComponent(chCadastroSalas)
                            .addComponent(chCadastroCargos)
                            .addComponent(chCadastroCursos)
                            .addComponent(chCadastroUsuarios)
                            .addComponent(chCadastroFuncionarios)
                            .addComponent(chCadastroAlunos))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pnlAcompanheCadastro1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chCadastroAlunos, chCadastroCargos, chCadastroCursos, chCadastroDespesas, chCadastroFuncionarios, chCadastroSalas, chCadastroUsuarios});

        pnlAcompanheCadastro1Layout.setVerticalGroup(
            pnlAcompanheCadastro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro1Layout.createSequentialGroup()
                .addComponent(chCadastros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCadastroAlunos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCadastroFuncionarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCadastroUsuarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCadastroCursos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCadastroCargos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCadastroSalas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chCadastroDespesas)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlAcompanheCadastro2.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Relatórios", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chRelatoriosAlunos.setText("Alunos");
        chRelatoriosAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chRelatoriosAlunosActionPerformed(evt);
            }
        });

        chTodosAlunos.setText(" Todos Alunos");
        chTodosAlunos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chTodosAlunosActionPerformed(evt);
            }
        });

        chAlunosAtivosInativos.setText("Ativo/Inativo");

        chAlunosAniversariantes.setText("Aniversariantes");

        chAlunosInadimplentes.setText("Inadimplentes");

        chAlunosCurso.setText("Alunos/Curso");

        chAlunosProfessor.setText("Alunos/Professor");

        chRelatorios.setText("Relatórios");
        chRelatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chRelatoriosActionPerformed(evt);
            }
        });

        chAlunosContrato.setText("Aluno/Contrato");

        chAlunosBoleto.setText("Alunos/Boleto");

        chAlunosDesistentesCurso.setText("Desistentes/Curso");

        chAlunosDesistentesProfessor.setText("Desistentes/Professor");

        chAlunosIniciantesCurso.setText("Iniciantes/Curso");

        chAlunosIniciantesProfessor.setText("Iniciantes/Professor");

        chAlunosMarketing.setText("Alunos/Marketing");

        chRelatoriosFuncionarios.setText("Funcionários");
        chRelatoriosFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chRelatoriosFuncionariosActionPerformed(evt);
            }
        });

        chTodosFuncionarios.setText(" Todos Alunos");
        chTodosFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chTodosFuncionariosActionPerformed(evt);
            }
        });

        chFuncionariosAtivosInativos.setText("Ativo/Inativo");

        chFuncionariosAniversariantes.setText("Aniversariantes");

        chRelatoriosFinancas.setText("Finanças");
        chRelatoriosFinancas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chRelatoriosFinancasActionPerformed(evt);
            }
        });

        chRelatoriosDespesas.setText("Despesas");
        chRelatoriosDespesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chRelatoriosDespesasActionPerformed(evt);
            }
        });

        chTodasDespesas.setText("Todas Despesas");
        chTodasDespesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chTodasDespesasActionPerformed(evt);
            }
        });

        chDespesasSituacao.setText("DespesasSituacao");

        chBalanco.setText("Balanço");

        chDespesasCategoria.setText("Despesas/Categoria");

        javax.swing.GroupLayout pnlAcompanheCadastro2Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro2);
        pnlAcompanheCadastro2.setLayout(pnlAcompanheCadastro2Layout);
        pnlAcompanheCadastro2Layout.setHorizontalGroup(
            pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAcompanheCadastro2Layout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAcompanheCadastro2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chRelatorios, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                    .addGroup(pnlAcompanheCadastro2Layout.createSequentialGroup()
                        .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro2Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chAlunosProfessor)
                                    .addComponent(chAlunosCurso)
                                    .addComponent(chAlunosInadimplentes)
                                    .addComponent(chAlunosAniversariantes)
                                    .addComponent(chAlunosAtivosInativos)
                                    .addComponent(chTodosAlunos)
                                    .addComponent(chAlunosContrato)
                                    .addComponent(chAlunosBoleto)
                                    .addComponent(chAlunosDesistentesCurso)
                                    .addComponent(chAlunosDesistentesProfessor)
                                    .addComponent(chAlunosIniciantesCurso)
                                    .addComponent(chAlunosIniciantesProfessor)
                                    .addComponent(chAlunosMarketing)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro2Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(chRelatoriosAlunos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(chTodosFuncionarios, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                .addComponent(chFuncionariosAtivosInativos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chFuncionariosAniversariantes))
                            .addComponent(chRelatoriosFuncionarios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(chRelatoriosFinancas, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(chDespesasCategoria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chTodasDespesas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                .addComponent(chDespesasSituacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlAcompanheCadastro2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chBalanco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(chRelatoriosDespesas, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))))))
                .addGap(25, 25, 25))
        );

        pnlAcompanheCadastro2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chAlunosAniversariantes, chAlunosAtivosInativos, chAlunosBoleto, chAlunosContrato, chAlunosCurso, chAlunosDesistentesCurso, chAlunosDesistentesProfessor, chAlunosInadimplentes, chAlunosIniciantesCurso, chAlunosIniciantesProfessor, chAlunosMarketing, chAlunosProfessor, chFuncionariosAniversariantes, chFuncionariosAtivosInativos, chTodosAlunos, chTodosFuncionarios});

        pnlAcompanheCadastro2Layout.setVerticalGroup(
            pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro2Layout.createSequentialGroup()
                .addComponent(chRelatorios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chRelatoriosAlunos)
                    .addComponent(chRelatoriosFinancas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chTodosAlunos)
                    .addComponent(chRelatoriosDespesas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAcompanheCadastro2Layout.createSequentialGroup()
                        .addComponent(chAlunosAtivosInativos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chAlunosAniversariantes)
                            .addComponent(chDespesasCategoria))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chAlunosInadimplentes)
                            .addComponent(chDespesasSituacao)))
                    .addComponent(chTodasDespesas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chAlunosCurso)
                    .addComponent(chBalanco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanheCadastro2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAcompanheCadastro2Layout.createSequentialGroup()
                        .addComponent(chAlunosProfessor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chAlunosContrato)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chAlunosBoleto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chAlunosDesistentesCurso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chAlunosDesistentesProfessor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chAlunosIniciantesCurso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chAlunosIniciantesProfessor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chAlunosMarketing))
                    .addGroup(pnlAcompanheCadastro2Layout.createSequentialGroup()
                        .addComponent(chRelatoriosFuncionarios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chTodosFuncionarios)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chFuncionariosAtivosInativos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chFuncionariosAniversariantes))))
        );

        pnlAcompanheCadastro3.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Usuários", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chAlterarSenha.setText("Alterar Senha");

        chTrocarUsuario.setText("Trocar de Usuário");

        chEnviarEmail.setText("Enviar Email");

        chSair.setText("Sair");

        chUsuarios.setText("Usuários");
        chUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chUsuariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAcompanheCadastro3Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro3);
        pnlAcompanheCadastro3.setLayout(pnlAcompanheCadastro3Layout);
        pnlAcompanheCadastro3Layout.setHorizontalGroup(
            pnlAcompanheCadastro3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro3Layout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastro3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAcompanheCadastro3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro3Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(pnlAcompanheCadastro3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chSair)
                            .addComponent(chEnviarEmail)
                            .addComponent(chTrocarUsuario)
                            .addComponent(chAlterarSenha))))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pnlAcompanheCadastro3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chAlterarSenha, chEnviarEmail, chSair, chTrocarUsuario});

        pnlAcompanheCadastro3Layout.setVerticalGroup(
            pnlAcompanheCadastro3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro3Layout.createSequentialGroup()
                .addComponent(chUsuarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chAlterarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chTrocarUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chEnviarEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chSair))
        );

        pnlAcompanheCadastro4.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consultas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chLogAcessoUsuario.setText("Log Acesso Usuário");
        chLogAcessoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chLogAcessoUsuarioActionPerformed(evt);
            }
        });

        chLogAcoesUsuario.setText("Log Ações Usuário");

        chHorarioAulas.setText("Horário das Aulas");

        chConsultas.setText("Consultas");
        chConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chConsultasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAcompanheCadastro4Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro4);
        pnlAcompanheCadastro4.setLayout(pnlAcompanheCadastro4Layout);
        pnlAcompanheCadastro4Layout.setHorizontalGroup(
            pnlAcompanheCadastro4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro4Layout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastro4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAcompanheCadastro4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chConsultas, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro4Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(pnlAcompanheCadastro4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chHorarioAulas)
                            .addComponent(chLogAcoesUsuario)
                            .addComponent(chLogAcessoUsuario))))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pnlAcompanheCadastro4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chHorarioAulas, chLogAcessoUsuario, chLogAcoesUsuario});

        pnlAcompanheCadastro4Layout.setVerticalGroup(
            pnlAcompanheCadastro4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro4Layout.createSequentialGroup()
                .addComponent(chConsultas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chLogAcessoUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chLogAcoesUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chHorarioAulas))
        );

        chTarefas.setText("Tarefas");

        pnlAcompanheCadastro7.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configurações", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chConfiguracaoIP.setText("Configuração IP");
        chConfiguracaoIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chConfiguracaoIPActionPerformed(evt);
            }
        });

        chConfiguracaoUsuario.setText("Configurações Usuário");

        chConfiguracoes.setText("Configurações");
        chConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chConfiguracoesActionPerformed(evt);
            }
        });

        chConfiguracaoContrato.setText("Configurações Contrato");

        javax.swing.GroupLayout pnlAcompanheCadastro7Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro7);
        pnlAcompanheCadastro7.setLayout(pnlAcompanheCadastro7Layout);
        pnlAcompanheCadastro7Layout.setHorizontalGroup(
            pnlAcompanheCadastro7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro7Layout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastro7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAcompanheCadastro7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chConfiguracoes, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro7Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(pnlAcompanheCadastro7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chConfiguracaoUsuario)
                            .addComponent(chConfiguracaoIP)
                            .addComponent(chConfiguracaoContrato))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pnlAcompanheCadastro7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chConfiguracaoContrato, chConfiguracaoIP, chConfiguracaoUsuario});

        pnlAcompanheCadastro7Layout.setVerticalGroup(
            pnlAcompanheCadastro7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro7Layout.createSequentialGroup()
                .addComponent(chConfiguracoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chConfiguracaoIP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chConfiguracaoUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chConfiguracaoContrato))
        );

        pnlAcompanheCadastro8.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Help", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chAbout.setText("About");
        chAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chAboutActionPerformed(evt);
            }
        });

        chHelp.setText("Help");
        chHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chHelpActionPerformed(evt);
            }
        });

        chAjuda.setText("Ajuda");
        chAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chAjudaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAcompanheCadastro8Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro8);
        pnlAcompanheCadastro8.setLayout(pnlAcompanheCadastro8Layout);
        pnlAcompanheCadastro8Layout.setHorizontalGroup(
            pnlAcompanheCadastro8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAcompanheCadastro8Layout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastro8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chHelp, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAcompanheCadastro8Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(pnlAcompanheCadastro8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chAjuda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(chAbout, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))))
                .addGap(18, 18, 18))
        );
        pnlAcompanheCadastro8Layout.setVerticalGroup(
            pnlAcompanheCadastro8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro8Layout.createSequentialGroup()
                .addComponent(chHelp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chAbout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chAjuda)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout pnlAcompanheCadastroLayout = new javax.swing.GroupLayout(pnlAcompanheCadastro);
        pnlAcompanheCadastro.setLayout(pnlAcompanheCadastroLayout);
        pnlAcompanheCadastroLayout.setHorizontalGroup(
            pnlAcompanheCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastroLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlAcompanheCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlAcompanheCadastro4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlAcompanheCadastro3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlAcompanheCadastro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAcompanheCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chTarefas, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlAcompanheCadastro2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlAcompanheCadastroLayout.createSequentialGroup()
                        .addComponent(pnlAcompanheCadastro7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlAcompanheCadastro8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
        );
        pnlAcompanheCadastroLayout.setVerticalGroup(
            pnlAcompanheCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastroLayout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAcompanheCadastroLayout.createSequentialGroup()
                        .addComponent(pnlAcompanheCadastro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlAcompanheCadastro3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlAcompanheCadastro2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAcompanheCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAcompanheCadastro7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlAcompanheCadastro8, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlAcompanheCadastro4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chTarefas)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 31, 0, 0);
        panelDPA1.add(pnlAcompanheCadastro, gridBagConstraints);

        pnlAcompanheCadastro5.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Funcionários", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chPagamentosProfessores.setText("Pagamentos Professores");
        chPagamentosProfessores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chPagamentosProfessoresActionPerformed(evt);
            }
        });

        chLancamentos.setText("Lançamentos");

        chPagamentosFuncionarios.setText("Pagamentos Funcionários");

        javax.swing.GroupLayout pnlAcompanheCadastro5Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro5);
        pnlAcompanheCadastro5.setLayout(pnlAcompanheCadastro5Layout);
        pnlAcompanheCadastro5Layout.setHorizontalGroup(
            pnlAcompanheCadastro5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAcompanheCadastro5Layout.createSequentialGroup()
                .addGroup(pnlAcompanheCadastro5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chLancamentos)
                    .addComponent(chPagamentosProfessores)
                    .addComponent(chPagamentosFuncionarios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pnlAcompanheCadastro5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {chLancamentos, chPagamentosFuncionarios, chPagamentosProfessores});

        pnlAcompanheCadastro5Layout.setVerticalGroup(
            pnlAcompanheCadastro5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro5Layout.createSequentialGroup()
                .addComponent(chPagamentosFuncionarios)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chPagamentosProfessores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chLancamentos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 18, 0, 18);
        panelDPA1.add(pnlAcompanheCadastro5, gridBagConstraints);

        pnlAcompanheCadastro6.setBackground(new java.awt.Color(255, 255, 255));
        pnlAcompanheCadastro6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Alunos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        chVidaAluno.setText("Vida do Aluno");

        javax.swing.GroupLayout pnlAcompanheCadastro6Layout = new javax.swing.GroupLayout(pnlAcompanheCadastro6);
        pnlAcompanheCadastro6.setLayout(pnlAcompanheCadastro6Layout);
        pnlAcompanheCadastro6Layout.setHorizontalGroup(
            pnlAcompanheCadastro6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAcompanheCadastro6Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(chVidaAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        pnlAcompanheCadastro6Layout.setVerticalGroup(
            pnlAcompanheCadastro6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAcompanheCadastro6Layout.createSequentialGroup()
                .addComponent(chVidaAluno)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 0, 18);
        panelDPA1.add(pnlAcompanheCadastro6, gridBagConstraints);

        lblTipoUsuario.setText("Tipo Usuário:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(19, 40, 0, 0);
        panelDPA1.add(lblTipoUsuario, gridBagConstraints);

        cmbTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoUsuarioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 118;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 40, 0, 0);
        panelDPA1.add(cmbTipoUsuario, gridBagConstraints);

        btnSalvar.setText("Salvar Configurações");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 107, 24, 0);
        panelDPA1.add(btnSalvar, gridBagConstraints);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 119, 24, 0);
        panelDPA1.add(btnCancelar, gridBagConstraints);

        getContentPane().add(panelDPA1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void chTodosAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chTodosAlunosActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chTodosAlunosActionPerformed

private void chTodosFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chTodosFuncionariosActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chTodosFuncionariosActionPerformed

private void chTodasDespesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chTodasDespesasActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chTodasDespesasActionPerformed

private void chLogAcessoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chLogAcessoUsuarioActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chLogAcessoUsuarioActionPerformed

private void chPagamentosProfessoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chPagamentosProfessoresActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chPagamentosProfessoresActionPerformed

private void chConfiguracaoIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chConfiguracaoIPActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chConfiguracaoIPActionPerformed

private void chAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chAboutActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chAboutActionPerformed

private void cmbTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoUsuarioActionPerformed
// TODO add your handling code here:
    this.carregaConfigUser();
    this.testaValorCheck();
    this.lblTiposUsuario.setText(this.cmbTipoUsuario.getSelectedItem().toString());
}//GEN-LAST:event_cmbTipoUsuarioActionPerformed

private void chCadastrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chCadastrosActionPerformed
// TODO add your handling code here:
    if (this.chCadastros.isSelected() == false) {
        chCadastroAlunos.setSelected(false);
        chCadastroFuncionarios.setSelected(false);
        chCadastroUsuarios.setSelected(false);
        chCadastroCursos.setSelected(false);
        chCadastroCargos.setSelected(false);
        chCadastroSalas.setSelected(false);
        chCadastroDespesas.setSelected(false);

        chCadastroAlunos.setEnabled(false);
        chCadastroFuncionarios.setEnabled(false);
        chCadastroUsuarios.setEnabled(false);
        chCadastroCursos.setEnabled(false);
        chCadastroCargos.setEnabled(false);
        chCadastroSalas.setEnabled(false);
        chCadastroDespesas.setEnabled(false);

    } else if (this.chCadastros.isSelected() == true) {

        chCadastroAlunos.setSelected(true);
        chCadastroFuncionarios.setSelected(true);
        chCadastroUsuarios.setSelected(true);
        chCadastroCursos.setSelected(true);
        chCadastroCargos.setSelected(true);
        chCadastroSalas.setSelected(true);
        chCadastroDespesas.setSelected(true);

        chCadastroAlunos.setEnabled(true);
        chCadastroFuncionarios.setEnabled(true);
        chCadastroUsuarios.setEnabled(true);
        chCadastroCursos.setEnabled(true);
        chCadastroCargos.setEnabled(true);
        chCadastroSalas.setEnabled(true);
        chCadastroDespesas.setEnabled(true);
    }
}//GEN-LAST:event_chCadastrosActionPerformed

private void chUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chUsuariosActionPerformed
// TODO add your handling code here:
    if (this.chUsuarios.isSelected() == false) {

        chAlterarSenha.setSelected(false);
        chTrocarUsuario.setSelected(false);
        chEnviarEmail.setSelected(false);
        chSair.setSelected(false);

        /****Desabilitar Campos***/
        chAlterarSenha.setEnabled(false);
        chTrocarUsuario.setEnabled(false);
        chEnviarEmail.setEnabled(false);
        chSair.setEnabled(false);

    } else if (this.chUsuarios.isSelected() == true) {

        chAlterarSenha.setSelected(true);
        chTrocarUsuario.setSelected(true);
        chEnviarEmail.setSelected(true);
        chSair.setSelected(true);

        /****Habilitar Campos****/
        chAlterarSenha.setEnabled(true);
        chTrocarUsuario.setEnabled(true);
        chEnviarEmail.setEnabled(true);
        chSair.setEnabled(true);

    }
}//GEN-LAST:event_chUsuariosActionPerformed

private void chConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chConsultasActionPerformed
// TODO add your handling code here:
    if (this.chConsultas.isSelected() == false) {
        chLogAcessoUsuario.setSelected(false);
        chLogAcoesUsuario.setSelected(false);
        chHorarioAulas.setSelected(false);

        /***Desabilitar Campos***/
        chLogAcessoUsuario.setEnabled(false);
        chLogAcoesUsuario.setEnabled(false);
        chHorarioAulas.setEnabled(false);


    } else if (this.chConsultas.isSelected() == true) {

        chLogAcessoUsuario.setSelected(true);
        chLogAcoesUsuario.setSelected(true);
        chHorarioAulas.setSelected(true);

        /***Habilitar Campos***/
        chLogAcessoUsuario.setEnabled(true);
        chLogAcoesUsuario.setEnabled(true);
        chHorarioAulas.setEnabled(true);
    }
}//GEN-LAST:event_chConsultasActionPerformed

private void chConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chConfiguracoesActionPerformed
// TODO add your handling code here:
    if (this.chConfiguracoes.isSelected() == false) {
        chConfiguracaoIP.setSelected(false);
        chConfiguracaoUsuario.setSelected(false);
        chConfiguracaoContrato.setSelected(false);

        /***Desabilita Campos***/
        chConfiguracaoIP.setEnabled(false);
        chConfiguracaoUsuario.setEnabled(false);
        chConfiguracaoContrato.setEnabled(false);

    } else if (this.chConfiguracoes.isSelected() == true) {

        chConfiguracaoIP.setSelected(true);
        chConfiguracaoUsuario.setSelected(true);
        chConfiguracaoContrato.setSelected(true);

        /***Habilitar Campos***/
        chConfiguracaoIP.setEnabled(true);
        chConfiguracaoUsuario.setEnabled(true);
        chConfiguracaoContrato.setEnabled(true);

    }
}//GEN-LAST:event_chConfiguracoesActionPerformed

private void chHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chHelpActionPerformed
// TODO add your handling code here:
    if (this.chHelp.isSelected() == false) {
        chAbout.setSelected(false);
        chAjuda.setSelected(false);

        /***Desabilitar Campos***/
        chAbout.setEnabled(false);
        chAjuda.setEnabled(false);

    } else if (this.chHelp.isSelected() == true) {
        chAbout.setSelected(true);
        chAjuda.setSelected(true);

        /***Habilitar Campos***/
        chAbout.setEnabled(true);
        chAjuda.setEnabled(true);
    }
}//GEN-LAST:event_chHelpActionPerformed

private void chRelatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chRelatoriosActionPerformed
// TODO add your handling code here:
    if (this.chRelatorios.isSelected() == false) {
        /***SubRelatorios***/
        chRelatoriosAlunos.setSelected(false);
        //SubAlunos
        chTodosAlunos.setSelected(false);
        chAlunosAtivosInativos.setSelected(false);
        chAlunosAniversariantes.setSelected(false);
        chAlunosInadimplentes.setSelected(false);
        chAlunosCurso.setSelected(false);
        chAlunosProfessor.setSelected(false);
        chAlunosContrato.setSelected(false);
        chAlunosBoleto.setSelected(false);
        chAlunosDesistentesCurso.setSelected(false);
        chAlunosDesistentesProfessor.setSelected(false);
        chAlunosIniciantesCurso.setSelected(false);
        chAlunosIniciantesProfessor.setSelected(false);
        chAlunosMarketing.setSelected(false);

        /*****SubRelatorios*****/
        chRelatoriosFuncionarios.setSelected(false);
        /*****SubFuncionarios****/
        chTodosFuncionarios.setSelected(false);
        chFuncionariosAtivosInativos.setSelected(false);
        chFuncionariosAniversariantes.setSelected(false);

        /****SubRelatorios*****/
        chRelatoriosFinancas.setSelected(false);
        /*****SubDespesas****/
        chRelatoriosDespesas.setSelected(false);
        chTodasDespesas.setSelected(false);
        chDespesasCategoria.setSelected(false);
        chDespesasSituacao.setSelected(false);

        /*****SubDespesas****/
        chBalanco.setSelected(false);

        /****Desabilitar Campos****/
        /***SubRelatorios***/
        chRelatoriosAlunos.setEnabled(false);
        //SubAlunos
        chTodosAlunos.setEnabled(false);
        chAlunosAtivosInativos.setEnabled(false);
        chAlunosAniversariantes.setEnabled(false);
        chAlunosInadimplentes.setEnabled(false);
        chAlunosCurso.setEnabled(false);
        chAlunosProfessor.setEnabled(false);
        chAlunosContrato.setEnabled(false);
        chAlunosBoleto.setEnabled(false);
        chAlunosDesistentesCurso.setEnabled(false);
        chAlunosDesistentesProfessor.setEnabled(false);
        chAlunosIniciantesCurso.setEnabled(false);
        chAlunosIniciantesProfessor.setEnabled(false);
        chAlunosMarketing.setEnabled(false);

        /*****SubRelatorios*****/
        chRelatoriosFuncionarios.setEnabled(false);
        /*****SubFuncionarios****/
        chTodosFuncionarios.setEnabled(false);
        chFuncionariosAtivosInativos.setEnabled(false);
        chFuncionariosAniversariantes.setEnabled(false);

        /****SubRelatorios*****/
        chRelatoriosFinancas.setEnabled(false);
        /*****SubDespesas****/
        chRelatoriosDespesas.setEnabled(false);
        chTodasDespesas.setEnabled(false);
        chDespesasCategoria.setEnabled(false);
        chDespesasSituacao.setEnabled(false);

        /*****SubDespesas****/
        chBalanco.setEnabled(false);


    } else if (this.chRelatorios.isSelected() == true) {
        /***SubRelatorios***/
        chRelatoriosAlunos.setSelected(true);
        //SubAlunos
        chTodosAlunos.setSelected(true);
        chAlunosAtivosInativos.setSelected(true);
        chAlunosAniversariantes.setSelected(true);
        chAlunosInadimplentes.setSelected(true);
        chAlunosCurso.setSelected(true);
        chAlunosProfessor.setSelected(true);
        chAlunosContrato.setSelected(true);
        chAlunosBoleto.setSelected(true);
        chAlunosDesistentesCurso.setSelected(true);
        chAlunosDesistentesProfessor.setSelected(true);
        chAlunosIniciantesCurso.setSelected(true);
        chAlunosIniciantesProfessor.setSelected(true);
        chAlunosMarketing.setSelected(true);

        /*****SubRelatorios*****/
        chRelatoriosFuncionarios.setSelected(true);
        /*****SubFuncionarios****/
        chTodosFuncionarios.setSelected(true);
        chFuncionariosAtivosInativos.setSelected(true);
        chFuncionariosAniversariantes.setSelected(true);

        /****SubRelatorios*****/
        chRelatoriosFinancas.setSelected(true);
        /*****SubDespesas****/
        chRelatoriosDespesas.setSelected(true);
        chTodasDespesas.setSelected(true);
        chDespesasCategoria.setSelected(true);
        chDespesasSituacao.setSelected(true);

        /*****SubDespesas****/
        chBalanco.setSelected(true);



        /****Habilitar Campos****/
        /***SubRelatorios***/
        chRelatoriosAlunos.setEnabled(true);
        //SubAlunos
        chTodosAlunos.setEnabled(true);
        chAlunosAtivosInativos.setEnabled(true);
        chAlunosAniversariantes.setEnabled(true);
        chAlunosInadimplentes.setEnabled(true);
        chAlunosCurso.setEnabled(true);
        chAlunosProfessor.setEnabled(true);
        chAlunosContrato.setEnabled(true);
        chAlunosBoleto.setEnabled(true);
        chAlunosDesistentesCurso.setEnabled(true);
        chAlunosDesistentesProfessor.setEnabled(true);
        chAlunosIniciantesCurso.setEnabled(true);
        chAlunosIniciantesProfessor.setEnabled(true);
        chAlunosMarketing.setEnabled(true);

        /*****SubRelatorios*****/
        chRelatoriosFuncionarios.setEnabled(true);
        /*****SubFuncionarios****/
        chTodosFuncionarios.setEnabled(true);
        chFuncionariosAtivosInativos.setEnabled(true);
        chFuncionariosAniversariantes.setEnabled(true);

        /****SubRelatorios*****/
        chRelatoriosFinancas.setEnabled(true);
        /*****SubDespesas****/
        chRelatoriosDespesas.setEnabled(true);
        chTodasDespesas.setEnabled(true);
        chDespesasCategoria.setEnabled(true);
        chDespesasSituacao.setEnabled(true);

        /*****SubDespesas****/
        chBalanco.setEnabled(true);
    }
}//GEN-LAST:event_chRelatoriosActionPerformed

private void chRelatoriosAlunosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chRelatoriosAlunosActionPerformed
// TODO add your handling code here:
    if (chRelatoriosAlunos.isSelected() == false) {
        //SubAlunos
        chTodosAlunos.setSelected(false);
        chAlunosAtivosInativos.setSelected(false);
        chAlunosAniversariantes.setSelected(false);
        chAlunosInadimplentes.setSelected(false);
        chAlunosCurso.setSelected(false);
        chAlunosProfessor.setSelected(false);
        chAlunosContrato.setSelected(false);
        chAlunosBoleto.setSelected(false);
        chAlunosDesistentesCurso.setSelected(false);
        chAlunosDesistentesProfessor.setSelected(false);
        chAlunosIniciantesCurso.setSelected(false);
        chAlunosIniciantesProfessor.setSelected(false);
        chAlunosMarketing.setSelected(false);

        /***Desabilitar Campos***/
        chTodosAlunos.setEnabled(false);
        chAlunosAtivosInativos.setEnabled(false);
        chAlunosAniversariantes.setEnabled(false);
        chAlunosInadimplentes.setEnabled(false);
        chAlunosCurso.setEnabled(false);
        chAlunosProfessor.setEnabled(false);
        chAlunosContrato.setEnabled(false);
        chAlunosBoleto.setEnabled(false);
        chAlunosDesistentesCurso.setEnabled(false);
        chAlunosDesistentesProfessor.setEnabled(false);
        chAlunosIniciantesCurso.setEnabled(false);
        chAlunosIniciantesProfessor.setEnabled(false);
        chAlunosMarketing.setEnabled(false);


    } else if (chRelatoriosAlunos.isSelected() == true) {
        //SubAlunos
        chTodosAlunos.setSelected(true);
        chAlunosAtivosInativos.setSelected(true);
        chAlunosAniversariantes.setSelected(true);
        chAlunosInadimplentes.setSelected(true);
        chAlunosCurso.setSelected(true);
        chAlunosProfessor.setSelected(true);
        chAlunosContrato.setSelected(true);
        chAlunosBoleto.setSelected(true);
        chAlunosDesistentesCurso.setSelected(true);
        chAlunosDesistentesProfessor.setSelected(true);
        chAlunosIniciantesCurso.setSelected(true);
        chAlunosIniciantesProfessor.setSelected(true);
        chAlunosMarketing.setSelected(true);


        /***Habilitar Campos***/
        chTodosAlunos.setEnabled(true);
        chAlunosAtivosInativos.setEnabled(true);
        chAlunosAniversariantes.setEnabled(true);
        chAlunosInadimplentes.setEnabled(true);
        chAlunosCurso.setEnabled(true);
        chAlunosProfessor.setEnabled(true);
        chAlunosContrato.setEnabled(true);
        chAlunosBoleto.setEnabled(true);
        chAlunosDesistentesCurso.setEnabled(true);
        chAlunosDesistentesProfessor.setEnabled(true);
        chAlunosIniciantesCurso.setEnabled(true);
        chAlunosIniciantesProfessor.setEnabled(true);
        chAlunosMarketing.setEnabled(true);
    }
}//GEN-LAST:event_chRelatoriosAlunosActionPerformed

private void chRelatoriosFinancasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chRelatoriosFinancasActionPerformed
// TODO add your handling code here:
    if (this.chRelatoriosFinancas.isSelected() == false) {
        /*****SubDespesas****/
        chRelatoriosDespesas.setSelected(false);
        chTodasDespesas.setSelected(false);
        chDespesasCategoria.setSelected(false);
        chDespesasSituacao.setSelected(false);

        /*****SubDespesas****/
        chBalanco.setSelected(false);


        /***Desabilitar Campos****/
        /*****SubDespesas****/
        chRelatoriosDespesas.setEnabled(false);
        chTodasDespesas.setEnabled(false);
        chDespesasCategoria.setEnabled(false);
        chDespesasSituacao.setEnabled(false);

        /*****SubDespesas****/
        chBalanco.setEnabled(false);

    } else if (this.chRelatoriosFinancas.isSelected() == true) {
        /*****SubDespesas****/
        chRelatoriosDespesas.setSelected(true);
        chTodasDespesas.setSelected(true);
        chDespesasCategoria.setSelected(true);
        chDespesasSituacao.setSelected(true);

        /*****SubDespesas****/
        chBalanco.setSelected(true);

        /***Habilitar Campos***/
        /*****SubDespesas****/
        chRelatoriosDespesas.setEnabled(true);
        chTodasDespesas.setEnabled(true);
        chDespesasCategoria.setEnabled(true);
        chDespesasSituacao.setEnabled(true);

        /*****SubDespesas****/
        chBalanco.setEnabled(true);
    }
}//GEN-LAST:event_chRelatoriosFinancasActionPerformed

private void chRelatoriosDespesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chRelatoriosDespesasActionPerformed
// TODO add your handling code here:
    if (this.chRelatoriosDespesas.isSelected() == false) {
        chTodasDespesas.setSelected(false);
        chDespesasCategoria.setSelected(false);
        chDespesasSituacao.setSelected(false);

        /**Desabilitar Campos***/
        chTodasDespesas.setEnabled(false);
        chDespesasCategoria.setEnabled(false);
        chDespesasSituacao.setEnabled(false);


    } else if (this.chRelatoriosDespesas.isSelected() == true) {

        chTodasDespesas.setSelected(true);
        chDespesasCategoria.setSelected(true);
        chDespesasSituacao.setSelected(true);

        /***Habilitar Campos***/
        chTodasDespesas.setEnabled(true);
        chDespesasCategoria.setEnabled(true);
        chDespesasSituacao.setEnabled(true);
    }
}//GEN-LAST:event_chRelatoriosDespesasActionPerformed

private void chRelatoriosFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chRelatoriosFuncionariosActionPerformed
// TODO add your handling code here:
    if (this.chRelatoriosFuncionarios.isSelected() == false) {
        chTodosFuncionarios.setSelected(false);
        chFuncionariosAtivosInativos.setSelected(false);
        chFuncionariosAniversariantes.setSelected(false);

        /***Desabilitar Campos***/
        chTodosFuncionarios.setEnabled(false);
        chFuncionariosAtivosInativos.setEnabled(false);
        chFuncionariosAniversariantes.setEnabled(false);

    } else if (this.chRelatoriosFuncionarios.isSelected() == true) {

        chTodosFuncionarios.setSelected(true);
        chFuncionariosAtivosInativos.setSelected(true);
        chFuncionariosAniversariantes.setSelected(true);

        /***Habilitar Campos***/
        chTodosFuncionarios.setEnabled(true);
        chFuncionariosAtivosInativos.setEnabled(true);
        chFuncionariosAniversariantes.setEnabled(true);
    }
}//GEN-LAST:event_chRelatoriosFuncionariosActionPerformed

private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
// TODO add your handling code here:

    try {

        if (this.alteraConfig()) {

            JOptionPane.showMessageDialog(this, "Configuração Salva com sucesso", "Configuração Usuário", 1);
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao configurar!!!", "Configuração Usuário", 0);
        }

    } catch (URISyntaxException ex) {
        Logger.getLogger(ConfiguracaoIP.class.getName()).log(Level.SEVERE, null, ex);
    } catch (FileNotFoundException ex) {
        Logger.getLogger(ConfiguracoesUsuarios.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(ConfiguracoesUsuarios.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnSalvarActionPerformed

private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
// TODO add your handling code here:
    this.dispose();
}//GEN-LAST:event_btnCancelarActionPerformed

private void chAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chAjudaActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_chAjudaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private interfacegrafica.dpa.buttons.ButtonSimplesDPA btnCancelar;
    private interfacegrafica.dpa.buttons.ButtonSimplesDPA btnSalvar;
    private javax.swing.JCheckBox chAbout;
    private javax.swing.JCheckBox chAjuda;
    private javax.swing.JCheckBox chAlterarSenha;
    private javax.swing.JCheckBox chAlunosAniversariantes;
    private javax.swing.JCheckBox chAlunosAtivosInativos;
    private javax.swing.JCheckBox chAlunosBoleto;
    private javax.swing.JCheckBox chAlunosContrato;
    private javax.swing.JCheckBox chAlunosCurso;
    private javax.swing.JCheckBox chAlunosDesistentesCurso;
    private javax.swing.JCheckBox chAlunosDesistentesProfessor;
    private javax.swing.JCheckBox chAlunosInadimplentes;
    private javax.swing.JCheckBox chAlunosIniciantesCurso;
    private javax.swing.JCheckBox chAlunosIniciantesProfessor;
    private javax.swing.JCheckBox chAlunosMarketing;
    private javax.swing.JCheckBox chAlunosProfessor;
    private javax.swing.JCheckBox chBalanco;
    private javax.swing.JCheckBox chCadastroAlunos;
    private javax.swing.JCheckBox chCadastroCargos;
    private javax.swing.JCheckBox chCadastroCursos;
    private javax.swing.JCheckBox chCadastroDespesas;
    private javax.swing.JCheckBox chCadastroFuncionarios;
    private javax.swing.JCheckBox chCadastroSalas;
    private javax.swing.JCheckBox chCadastroUsuarios;
    private javax.swing.JCheckBox chCadastros;
    private javax.swing.JCheckBox chConfiguracaoContrato;
    private javax.swing.JCheckBox chConfiguracaoIP;
    private javax.swing.JCheckBox chConfiguracaoUsuario;
    private javax.swing.JCheckBox chConfiguracoes;
    private javax.swing.JCheckBox chConsultas;
    private javax.swing.JCheckBox chDespesasCategoria;
    private javax.swing.JCheckBox chDespesasSituacao;
    private javax.swing.JCheckBox chEnviarEmail;
    private javax.swing.JCheckBox chFuncionariosAniversariantes;
    private javax.swing.JCheckBox chFuncionariosAtivosInativos;
    private javax.swing.JCheckBox chHelp;
    private javax.swing.JCheckBox chHorarioAulas;
    private javax.swing.JCheckBox chLancamentos;
    private javax.swing.JCheckBox chLogAcessoUsuario;
    private javax.swing.JCheckBox chLogAcoesUsuario;
    private javax.swing.JCheckBox chPagamentosFuncionarios;
    private javax.swing.JCheckBox chPagamentosProfessores;
    private javax.swing.JCheckBox chRelatorios;
    private javax.swing.JCheckBox chRelatoriosAlunos;
    private javax.swing.JCheckBox chRelatoriosDespesas;
    private javax.swing.JCheckBox chRelatoriosFinancas;
    private javax.swing.JCheckBox chRelatoriosFuncionarios;
    private javax.swing.JCheckBox chSair;
    private javax.swing.JCheckBox chTarefas;
    private javax.swing.JCheckBox chTodasDespesas;
    private javax.swing.JCheckBox chTodosAlunos;
    private javax.swing.JCheckBox chTodosFuncionarios;
    private javax.swing.JCheckBox chTrocarUsuario;
    private javax.swing.JCheckBox chUsuarios;
    private javax.swing.JCheckBox chVidaAluno;
    private interfacegrafica.dpa.combobox.ComboboxDPA cmbTipoUsuario;
    private interfacegrafica.dpa.labels.LabelDPA lblTipoUsuario;
    private interfacegrafica.dpa.labels.LabelDPA lblTiposUsuario;
    private interfacegrafica.dpa.panels.PanelDPA panelDPA1;
    private javax.swing.JPanel pnlAcompanheCadastro;
    private javax.swing.JPanel pnlAcompanheCadastro1;
    private javax.swing.JPanel pnlAcompanheCadastro2;
    private javax.swing.JPanel pnlAcompanheCadastro3;
    private javax.swing.JPanel pnlAcompanheCadastro4;
    private javax.swing.JPanel pnlAcompanheCadastro5;
    private javax.swing.JPanel pnlAcompanheCadastro6;
    private javax.swing.JPanel pnlAcompanheCadastro7;
    private javax.swing.JPanel pnlAcompanheCadastro8;
    // End of variables declaration//GEN-END:variables

    private void addWindowListener() {

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent evt) {
                System.gc();
                jDialogConfiguracoesUser = null;
            }
        });
    }

    /**
     * Carrega o arquivo de configuração dos usuários
     * 
     */
    private void carregaConfigUser() {


        Properties config = new Properties();
        try {

            if (cmbTipoUsuario.getSelectedItem().toString().equals("userSystem")) {
                InputStream configuracao = getClass().getResourceAsStream("/sistemaoficinamusica/config/usersystem.properties");
                config.load(configuracao);

            }

            if (cmbTipoUsuario.getSelectedItem().toString().equals("admSystem")) {

                InputStream configuracao = getClass().getResourceAsStream("/sistemaoficinamusica/config/admsystem.properties");
                config.load(configuracao);
            }

            if (cmbTipoUsuario.getSelectedItem().toString().equals("professor")) {

                InputStream configuracao = getClass().getResourceAsStream("/sistemaoficinamusica/config/professor.properties");
                config.load(configuracao);
            }
            
            if (cmbTipoUsuario.getSelectedItem().toString().equals("manut")) {

                InputStream configuracao = getClass().getResourceAsStream("/sistemaoficinamusica/config/manut.properties");
                config.load(configuracao);
            }
            
            if (cmbTipoUsuario.getSelectedItem().toString().equals("root")) {

                InputStream configuracao = getClass().getResourceAsStream("/sistemaoficinamusica/config/root.properties");
                config.load(configuracao);
            }


            /************Menu Cadastros*******************************/
            chCadastros.setSelected(Boolean.parseBoolean(config.getProperty("jMenuCadastros")));
            chCadastroAlunos.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunos")));
            chCadastroFuncionarios.setSelected(Boolean.parseBoolean(config.getProperty("jmiFuncionarios")));
            chCadastroUsuarios.setSelected(Boolean.parseBoolean(config.getProperty("jmiUsuarios")));
            chCadastroCursos.setSelected(Boolean.parseBoolean(config.getProperty("jmiCursos")));
            chCadastroCargos.setSelected(Boolean.parseBoolean(config.getProperty("jmiCargos")));
            chCadastroSalas.setSelected(Boolean.parseBoolean(config.getProperty("jmiSalas")));
            chCadastroDespesas.setSelected(Boolean.parseBoolean(config.getProperty("jmiDespesas")));

            /************Menu Relatórios*******************************/
            chRelatorios.setSelected(Boolean.parseBoolean(config.getProperty("jMenuRelatorios")));

            /***SubRelatorios***/
            chRelatoriosAlunos.setSelected(Boolean.parseBoolean(config.getProperty("jmiReportAlunos")));
            //SubAlunos
            chTodosAlunos.setSelected(Boolean.parseBoolean(config.getProperty("jmiTodosAlunos")));
            chAlunosAtivosInativos.setSelected(Boolean.parseBoolean(config.getProperty("jmiAtivoInativo")));
            chAlunosAniversariantes.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosAniversariantes")));
            chAlunosInadimplentes.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosInadimplentes")));
            chAlunosCurso.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosCurso")));
            chAlunosProfessor.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosProfessor")));
            chAlunosContrato.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosContrato")));
            chAlunosBoleto.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosBoleto")));
            chAlunosDesistentesCurso.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosDesistentesCurso")));
            chAlunosDesistentesProfessor.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosDesistentesProfessor")));
            chAlunosIniciantesCurso.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosIniciantesCurso")));
            chAlunosIniciantesProfessor.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlunosIniciantesProfessor")));
            chAlunosMarketing.setSelected(Boolean.parseBoolean(config.getProperty("jmiMarketing")));

            /*****SubRelatorios*****/
            chRelatoriosFuncionarios.setSelected(Boolean.parseBoolean(config.getProperty("jmiReportFuncionarios")));
            /*****SubFuncionarios****/
            chTodosFuncionarios.setSelected(Boolean.parseBoolean(config.getProperty("jmiTodosFuncionarios")));
            chFuncionariosAtivosInativos.setSelected(Boolean.parseBoolean(config.getProperty("jmiFuncionariosAtivosInativos")));
            chFuncionariosAniversariantes.setSelected(Boolean.parseBoolean(config.getProperty("jmiFuncionariosAniversariantes")));

            /****SubRelatorios*****/
            chRelatoriosFinancas.setSelected(Boolean.parseBoolean(config.getProperty("jmiReportFinancas")));
            /*****SubDespesas****/
            chRelatoriosDespesas.setSelected(Boolean.parseBoolean(config.getProperty("jmiRelatoriosDespesas")));
            chTodasDespesas.setSelected(Boolean.parseBoolean(config.getProperty("jmiTodasDespesas")));
            chDespesasCategoria.setSelected(Boolean.parseBoolean(config.getProperty("jmiDespesasCategoria")));
            chDespesasSituacao.setSelected(Boolean.parseBoolean(config.getProperty("jmiDespesasSituacao")));

            /*****SubDespesas****/
            chBalanco.setSelected(Boolean.parseBoolean(config.getProperty("jmiBalanco")));

            /***SubRelatorios***/
            chConsultas.setSelected(Boolean.parseBoolean(config.getProperty("jMenuConsultas")));
            /*****SubConsultas****/
            chLogAcessoUsuario.setSelected(Boolean.parseBoolean(config.getProperty("jmiLogEntradaSaidaUsuario")));
            chLogAcoesUsuario.setSelected(Boolean.parseBoolean(config.getProperty("jmiLogAcoesUsuario")));
            chHorarioAulas.setSelected(Boolean.parseBoolean(config.getProperty("jmiHorariosAulas")));

            /****Menu Usuario****/
            chUsuarios.setSelected(Boolean.parseBoolean(config.getProperty("jMenuUsuario")));
            /***SubUsuarios***/
            chAlterarSenha.setSelected(Boolean.parseBoolean(config.getProperty("jmiAlterarSenha")));
            chTrocarUsuario.setSelected(Boolean.parseBoolean(config.getProperty("jmiTrocaUsuario")));
            chEnviarEmail.setSelected(Boolean.parseBoolean(config.getProperty("jmiEnviaMail")));
            chSair.setSelected(Boolean.parseBoolean(config.getProperty("jmiSair")));


            /****Menu Configurações***/
            chConfiguracoes.setSelected(Boolean.parseBoolean(config.getProperty("jMenuConfiguracoes")));
            /****SubConfiguracoes****/
            chConfiguracaoIP.setSelected(Boolean.parseBoolean(config.getProperty("jmiConfiguracaoIP")));
            chConfiguracaoUsuario.setSelected(Boolean.parseBoolean(config.getProperty("jmiConfiguracaoUsuario")));
            chConfiguracaoContrato.setSelected(Boolean.parseBoolean(config.getProperty("jmiConfiguracaoContrato")));

            /****Menu Help****/
            chHelp.setSelected(Boolean.parseBoolean(config.getProperty("jMenuHelp")));
            /****SubHelp******/
            chAbout.setSelected(Boolean.parseBoolean(config.getProperty("jmiAbout")));
            chAjuda.setSelected(Boolean.parseBoolean(config.getProperty("jmiAjuda")));
            

            /*****Tarefas*****/
            chTarefas.setSelected(Boolean.parseBoolean(config.getProperty("lblTarefas")));

            /***Vida do Aluno no Cadastro de Alunos***/
            chVidaAluno.setSelected(Boolean.parseBoolean(config.getProperty("btnVidaAluno")));

            /***Cadastro de Funcionários****/
            chPagamentosProfessores.setSelected(Boolean.parseBoolean(config.getProperty("btnPagtoProfessores")));
            chLancamentos.setSelected(Boolean.parseBoolean(config.getProperty("btnLancamentos")));
            chPagamentosFuncionarios.setSelected(Boolean.parseBoolean(config.getProperty("btnPagtoFuncionarios")));







        } catch (IOException ex) {
            Logger.getLogger(ConfiguracoesUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Exibe os valores de acordo com o tipo de 
     * usuário selecionado
     */
    private void testaValorCheck() {

        /****Cadastros*****/
        if (this.chCadastros.isSelected() == false) {

            chCadastroAlunos.setSelected(false);
            chCadastroFuncionarios.setSelected(false);
            chCadastroUsuarios.setSelected(false);
            chCadastroCursos.setSelected(false);
            chCadastroCargos.setSelected(false);
            chCadastroSalas.setSelected(false);
            chCadastroDespesas.setSelected(false);


            chCadastroAlunos.setEnabled(false);
            chCadastroFuncionarios.setEnabled(false);
            chCadastroUsuarios.setEnabled(false);
            chCadastroCursos.setEnabled(false);
            chCadastroCargos.setEnabled(false);
            chCadastroSalas.setEnabled(false);
            chCadastroDespesas.setEnabled(false);
        } else {

            chCadastroAlunos.setEnabled(true);
            chCadastroFuncionarios.setEnabled(true);
            chCadastroUsuarios.setEnabled(true);
            chCadastroCursos.setEnabled(true);
            chCadastroCargos.setEnabled(true);
            chCadastroSalas.setEnabled(true);
            chCadastroDespesas.setEnabled(true);

        }

        /*****Usuarios*****/
        if (this.chUsuarios.isSelected() == false) {

            chAlterarSenha.setSelected(false);
            chTrocarUsuario.setSelected(false);
            chEnviarEmail.setSelected(false);
            chSair.setSelected(false);

            chAlterarSenha.setEnabled(false);
            chTrocarUsuario.setEnabled(false);
            chEnviarEmail.setEnabled(false);
            chSair.setEnabled(false);

        } else {
            chAlterarSenha.setEnabled(true);
            chTrocarUsuario.setEnabled(true);
            chEnviarEmail.setEnabled(true);
            chSair.setEnabled(true);

        }



        /*****Consultas*****/
        if (this.chConsultas.isSelected() == false) {

            chLogAcessoUsuario.setSelected(false);
            chLogAcoesUsuario.setSelected(false);
            chHorarioAulas.setSelected(false);

            chLogAcessoUsuario.setEnabled(false);
            chLogAcoesUsuario.setEnabled(false);
            chHorarioAulas.setEnabled(false);
        } else {

            chLogAcessoUsuario.setEnabled(true);
            chLogAcoesUsuario.setEnabled(true);
            chHorarioAulas.setEnabled(true);

        }
        /*****Configurações*****/
        if (this.chConfiguracoes.isSelected() == false) {

            chConfiguracaoIP.setSelected(false);
            chConfiguracaoUsuario.setSelected(false);
            chConfiguracaoContrato.setSelected(false);

            chConfiguracaoIP.setEnabled(false);
            chConfiguracaoUsuario.setEnabled(false);
            chConfiguracaoContrato.setEnabled(false);
        } else {

            chConfiguracaoIP.setEnabled(true);
            chConfiguracaoUsuario.setEnabled(true);
            chConfiguracaoContrato.setEnabled(true);
        }
        /****Help****/
        if (this.chHelp.isSelected() == false) {

            chAbout.setSelected(false);
            chAbout.setEnabled(false);
            chAjuda.setSelected(false);
            chAjuda.setEnabled(false);
        } else {

            chAbout.setEnabled(true);
            chAjuda.setEnabled(true);
        }

        /****Relatórios****/
        if (this.chRelatorios.isSelected() == false) {
            /***SubRelatorios***/
            chRelatoriosAlunos.setSelected(false);
            //SubAlunos
            chTodosAlunos.setSelected(false);
            chAlunosAtivosInativos.setSelected(false);
            chAlunosAniversariantes.setSelected(false);
            chAlunosInadimplentes.setSelected(false);
            chAlunosCurso.setSelected(false);
            chAlunosProfessor.setSelected(false);
            chAlunosContrato.setSelected(false);
            chAlunosBoleto.setSelected(false);
            chAlunosDesistentesCurso.setSelected(false);
            chAlunosDesistentesProfessor.setSelected(false);
            chAlunosIniciantesCurso.setSelected(false);
            chAlunosIniciantesProfessor.setSelected(false);
            chAlunosMarketing.setSelected(false);

            /*****SubRelatorios*****/
            chRelatoriosFuncionarios.setSelected(false);
            /*****SubFuncionarios****/
            chTodosFuncionarios.setSelected(false);
            chFuncionariosAtivosInativos.setSelected(false);
            chFuncionariosAniversariantes.setSelected(false);

            /****SubRelatorios*****/
            chRelatoriosFinancas.setSelected(false);
            /*****SubDespesas****/
            chRelatoriosDespesas.setSelected(false);
            chTodasDespesas.setSelected(false);
            chDespesasCategoria.setSelected(false);
            chDespesasSituacao.setSelected(false);

            /*****SubDespesas****/
            chBalanco.setSelected(false);





            /***SubRelatorios***/
            chRelatoriosAlunos.setEnabled(false);
            //SubAlunos
            chTodosAlunos.setEnabled(false);
            chAlunosAtivosInativos.setEnabled(false);
            chAlunosAniversariantes.setEnabled(false);
            chAlunosInadimplentes.setEnabled(false);
            chAlunosCurso.setEnabled(false);
            chAlunosProfessor.setEnabled(false);
            chAlunosContrato.setEnabled(false);
            chAlunosBoleto.setEnabled(false);
            chAlunosDesistentesCurso.setEnabled(false);
            chAlunosDesistentesProfessor.setEnabled(false);
            chAlunosIniciantesCurso.setEnabled(false);
            chAlunosIniciantesProfessor.setEnabled(false);
            chAlunosMarketing.setEnabled(false);

            /*****SubRelatorios*****/
            chRelatoriosFuncionarios.setEnabled(false);
            /*****SubFuncionarios****/
            chTodosFuncionarios.setEnabled(false);
            chFuncionariosAtivosInativos.setEnabled(false);
            chFuncionariosAniversariantes.setEnabled(false);

            /****SubRelatorios*****/
            chRelatoriosFinancas.setEnabled(false);
            /*****SubDespesas****/
            chRelatoriosDespesas.setEnabled(false);
            chTodasDespesas.setEnabled(false);
            chDespesasCategoria.setEnabled(false);
            chDespesasSituacao.setEnabled(false);

            /*****SubDespesas****/
            chBalanco.setEnabled(false);

        } else {

            /***SubRelatorios***/
            chRelatoriosAlunos.setEnabled(true);
            //SubAlunos
            chTodosAlunos.setEnabled(true);
            chAlunosAtivosInativos.setEnabled(true);
            chAlunosAniversariantes.setEnabled(true);
            chAlunosInadimplentes.setEnabled(true);
            chAlunosCurso.setEnabled(true);
            chAlunosProfessor.setEnabled(true);
            chAlunosContrato.setEnabled(true);
            chAlunosBoleto.setEnabled(true);
            chAlunosDesistentesCurso.setEnabled(true);
            chAlunosDesistentesProfessor.setEnabled(true);
            chAlunosIniciantesCurso.setEnabled(true);
            chAlunosIniciantesProfessor.setEnabled(true);
            chAlunosMarketing.setEnabled(true);

            /*****SubRelatorios*****/
            chRelatoriosFuncionarios.setEnabled(true);
            /*****SubFuncionarios****/
            chTodosFuncionarios.setEnabled(true);
            chFuncionariosAtivosInativos.setEnabled(true);
            chFuncionariosAniversariantes.setEnabled(true);

            /****SubRelatorios*****/
            chRelatoriosFinancas.setEnabled(true);
            /*****SubDespesas****/
            chRelatoriosDespesas.setEnabled(true);
            chTodasDespesas.setEnabled(true);
            chDespesasCategoria.setEnabled(true);
            chDespesasSituacao.setEnabled(true);

            /*****SubDespesas****/
            chBalanco.setEnabled(true);




        }
        /****Relatórios Alunos****/
        if (chRelatoriosAlunos.isSelected() == false) {
            //SubAlunos
            chTodosAlunos.setSelected(false);
            chAlunosAtivosInativos.setSelected(false);
            chAlunosAniversariantes.setSelected(false);
            chAlunosInadimplentes.setSelected(false);
            chAlunosCurso.setSelected(false);
            chAlunosProfessor.setSelected(false);
            chAlunosContrato.setSelected(false);
            chAlunosBoleto.setSelected(false);
            chAlunosDesistentesCurso.setSelected(false);
            chAlunosDesistentesProfessor.setSelected(false);
            chAlunosIniciantesCurso.setSelected(false);
            chAlunosIniciantesProfessor.setSelected(false);
            chAlunosMarketing.setSelected(false);



            chTodosAlunos.setEnabled(false);
            chAlunosAtivosInativos.setEnabled(false);
            chAlunosAniversariantes.setEnabled(false);
            chAlunosInadimplentes.setEnabled(false);
            chAlunosCurso.setEnabled(false);
            chAlunosProfessor.setEnabled(false);
            chAlunosContrato.setEnabled(false);
            chAlunosBoleto.setEnabled(false);
            chAlunosDesistentesCurso.setEnabled(false);
            chAlunosDesistentesProfessor.setEnabled(false);
            chAlunosIniciantesCurso.setEnabled(false);
            chAlunosIniciantesProfessor.setEnabled(false);
            chAlunosMarketing.setEnabled(false);
        } else {


            chTodosAlunos.setEnabled(true);
            chAlunosAtivosInativos.setEnabled(true);
            chAlunosAniversariantes.setEnabled(true);
            chAlunosInadimplentes.setEnabled(true);
            chAlunosCurso.setEnabled(true);
            chAlunosProfessor.setEnabled(true);
            chAlunosContrato.setEnabled(true);
            chAlunosBoleto.setEnabled(true);
            chAlunosDesistentesCurso.setEnabled(true);
            chAlunosDesistentesProfessor.setEnabled(true);
            chAlunosIniciantesCurso.setEnabled(true);
            chAlunosIniciantesProfessor.setEnabled(true);
            chAlunosMarketing.setEnabled(true);

        }
        /***Relatórios Funcionários****/
        if (this.chRelatoriosFuncionarios.isSelected() == false) {

            chTodosFuncionarios.setSelected(false);
            chFuncionariosAtivosInativos.setSelected(false);
            chFuncionariosAniversariantes.setSelected(false);


            chTodosFuncionarios.setEnabled(false);
            chFuncionariosAtivosInativos.setEnabled(false);
            chFuncionariosAniversariantes.setEnabled(false);
        } else {

            chTodosFuncionarios.setEnabled(true);
            chFuncionariosAtivosInativos.setEnabled(true);
            chFuncionariosAniversariantes.setEnabled(true);


        }
        /***Relatórios Finanças****/
        if (this.chRelatoriosFinancas.isSelected() == false) {
            /*****SubDespesas****/
            chRelatoriosDespesas.setSelected(false);
            chTodasDespesas.setSelected(false);
            chDespesasCategoria.setSelected(false);
            chDespesasSituacao.setSelected(false);

            /*****SubDespesas****/
            chBalanco.setSelected(false);


            /*****SubDespesas****/
            chRelatoriosDespesas.setEnabled(false);
            chTodasDespesas.setEnabled(false);
            chDespesasCategoria.setEnabled(false);
            chDespesasSituacao.setEnabled(false);

            /*****SubDespesas****/
            chBalanco.setEnabled(false);
        } else {

            /*****SubDespesas****/
            chRelatoriosDespesas.setEnabled(true);
            chTodasDespesas.setEnabled(true);
            chDespesasCategoria.setEnabled(true);
            chDespesasSituacao.setEnabled(true);

            /*****SubDespesas****/
            chBalanco.setEnabled(true);
        }
        /*****Relatórios Despesas****/
        if (this.chRelatoriosDespesas.isSelected() == false) {
            chTodasDespesas.setSelected(false);
            chDespesasCategoria.setSelected(false);
            chDespesasSituacao.setSelected(false);

            chTodasDespesas.setEnabled(false);
            chDespesasCategoria.setEnabled(false);
            chDespesasSituacao.setEnabled(false);
        } else {

            chTodasDespesas.setEnabled(true);
            chDespesasCategoria.setEnabled(true);
            chDespesasSituacao.setEnabled(true);
        }

    }

  
    /**
     * Altera as configurações do arquivo de configurações do Usuário
     * 
     * @return <code>boolean</code> true alteração efetivada e false alteração não efetiva
     * @throws URISyntaxException
     * @throws FileNotFoundException
     * @throws IOException 
     */
    private boolean alteraConfig() throws URISyntaxException, FileNotFoundException, IOException {
        Properties config = new Properties();
        File file = null;
        FileInputStream fis = null;

        if (this.cmbTipoUsuario.getSelectedItem().toString().equals("userSystem")) {
            URI arquivo = getClass().getResource("/sistemaoficinamusica/config/usersystem.properties").toURI();
            file = new File(arquivo);
            fis = new FileInputStream(file);
            config.load(fis);
        }else if (this.cmbTipoUsuario.getSelectedItem().toString().equals("admSystem")) {
            URI arquivo = getClass().getResource("/sistemaoficinamusica/config/admsystem.properties").toURI();
            file = new File(arquivo);
            fis = new FileInputStream(file);
            config.load(fis);
        }else if (this.cmbTipoUsuario.getSelectedItem().toString().equals("professor")) {
            URI arquivo = getClass().getResource("/sistemaoficinamusica/config/professor.properties").toURI();
            file = new File(arquivo);
            fis = new FileInputStream(file);
            config.load(fis);
        }else if (this.cmbTipoUsuario.getSelectedItem().toString().equals("manut")) {
            URI arquivo = getClass().getResource("/sistemaoficinamusica/config/manut.properties").toURI();
            file = new File(arquivo);
            fis = new FileInputStream(file);
            config.load(fis);
        }else if (this.cmbTipoUsuario.getSelectedItem().toString().equals("root")) {
            URI arquivo = getClass().getResource("/sistemaoficinamusica/config/root.properties").toURI();
            file = new File(arquivo);
            fis = new FileInputStream(file);
            config.load(fis);
        }


        try {

            /*****Alterando configurações****/
            /************Menu Cadastros*******************************/
            config.setProperty("jMenuCadastros", String.valueOf(chCadastros.isSelected()));
            config.setProperty("jmiAlunos", String.valueOf(chCadastroAlunos.isSelected()));
            config.setProperty("jmiFuncionarios", String.valueOf(chCadastroFuncionarios.isSelected()));
            config.setProperty("jmiUsuarios", String.valueOf(chCadastroUsuarios.isSelected()));
            config.setProperty("jmiCursos", String.valueOf(chCadastroCursos.isSelected()));
            config.setProperty("jmiCargos", String.valueOf(chCadastroCargos.isSelected()));
            config.setProperty("jmiSalas", String.valueOf(chCadastroSalas.isSelected()));
            config.setProperty("jmiDespesas", String.valueOf(chCadastroDespesas.isSelected()));

            /************Menu Relatórios*******************************/
            config.setProperty("jMenuRelatorios", String.valueOf(chRelatorios.isSelected()));

            /***SubRelatorios***/
            config.setProperty("jmiReportAlunos", String.valueOf(chRelatoriosAlunos.isSelected()));
            //SubAlunos
            config.setProperty("jmiTodosAlunos", String.valueOf(chTodosAlunos.isSelected()));
            config.setProperty("jmiAtivoInativo", String.valueOf(chAlunosAtivosInativos.isSelected()));
            config.setProperty("jmiAlunosAniversariantes", String.valueOf(chAlunosAniversariantes.isSelected()));
            config.setProperty("jmiAlunosInadimplentes", String.valueOf(chAlunosInadimplentes.isSelected()));
            config.setProperty("jmiAlunosCurso", String.valueOf(chCadastros.isSelected()));
            config.setProperty("jmiAlunosProfessor", String.valueOf(chAlunosCurso.isSelected()));
            config.setProperty("jmiAlunosContrato", String.valueOf(chAlunosContrato.isSelected()));
            config.setProperty("jmiAlunosBoleto", String.valueOf(chAlunosBoleto.isSelected()));
            config.setProperty("jmiAlunosDesistentesCurso", String.valueOf(chAlunosDesistentesCurso.isSelected()));
            config.setProperty("jmiAlunosDesistentesProfessor", String.valueOf(chAlunosDesistentesProfessor.isSelected()));
            config.setProperty("jmiAlunosIniciantesCurso", String.valueOf(chAlunosIniciantesCurso.isSelected()));
            config.setProperty("jmiAlunosIniciantesProfessor", String.valueOf(chAlunosIniciantesProfessor.isSelected()));
            config.setProperty("jmiMarketing", String.valueOf(chAlunosMarketing.isSelected()));

            /*****SubRelatorios*****/
            config.setProperty("jmiReportFuncionarios", String.valueOf(chRelatoriosFuncionarios.isSelected()));
            /*****SubFuncionarios****/
            config.setProperty("jmiTodosFuncionarios", String.valueOf(chTodosFuncionarios.isSelected()));
            config.setProperty("jmiFuncionariosAtivosInativos", String.valueOf(chFuncionariosAtivosInativos.isSelected()));
            config.setProperty("jmiFuncionariosAniversariantes", String.valueOf(chFuncionariosAniversariantes.isSelected()));

            /****SubRelatorios*****/
            config.setProperty("jmiReportFinancas", String.valueOf(chRelatoriosFinancas.isSelected()));
            /*****SubDespesas****/
            config.setProperty("jmiRelatoriosDespesas", String.valueOf(chRelatoriosDespesas.isSelected()));
            config.setProperty("jmiTodasDespesas", String.valueOf(chTodasDespesas.isSelected()));
            config.setProperty("jmiDespesasCategoria", String.valueOf(chDespesasCategoria.isSelected()));
            config.setProperty("jmiDespesasSituacao", String.valueOf(chDespesasSituacao.isSelected()));

            /*****SubDespesas****/
            config.setProperty("jmiBalanco", String.valueOf(chBalanco.isSelected()));

            /***SubRelatorios***/
            config.setProperty("jMenuConsultas", String.valueOf(chConsultas.isSelected()));
            /*****SubConsultas****/
            config.setProperty("jmiLogEntradaSaidaUsuario", String.valueOf(chLogAcessoUsuario.isSelected()));
            config.setProperty("jmiLogAcoesUsuario", String.valueOf(chLogAcoesUsuario.isSelected()));
            config.setProperty("jmiHorariosAulas", String.valueOf(chHorarioAulas.isSelected()));

            /****Menu Usuario****/
            config.setProperty("jMenuUsuario", String.valueOf(chUsuarios.isSelected()));
            /***SubUsuarios***/
            config.setProperty("jmiAlterarSenha", String.valueOf(chAlterarSenha.isSelected()));
            config.setProperty("jmiTrocaUsuario", String.valueOf(chTrocarUsuario.isSelected()));
            config.setProperty("jmiEnviaMail", String.valueOf(chEnviarEmail.isSelected()));
            config.setProperty("jmiSair", String.valueOf(chSair.isSelected()));


            /****Menu Configurações***/
            config.setProperty("jMenuConfiguracoes", String.valueOf(chConfiguracoes.isSelected()));
            /****SubConfiguracoes****/
            config.setProperty("jmiConfiguracaoIP", String.valueOf(chConfiguracaoIP.isSelected()));
            config.setProperty("jmiConfiguracaoUsuario", String.valueOf(chConfiguracaoUsuario.isSelected()));
            config.setProperty("jmiConfiguracaoContrato", String.valueOf(chConfiguracaoContrato.isSelected()));
            
            /****Menu Help****/
            config.setProperty("jMenuHelp", String.valueOf(chHelp.isSelected()));
            /****SubHelp******/
            config.setProperty("jmiAbout", String.valueOf(chAbout.isSelected()));
            config.setProperty("jmiAjuda", String.valueOf(chAjuda.isSelected()));
            

            /*****Tarefas*****/
            config.setProperty("lblTarefas", String.valueOf(chTarefas.isSelected()));

            /***Vida do Aluno no Cadastro de Alunos***/
            config.setProperty("btnVidaAluno", String.valueOf(chVidaAluno.isSelected()));

            /***Cadastro de Funcionários****/
            config.setProperty("btnPagtoProfessores", String.valueOf(chPagamentosProfessores.isSelected()));
            config.setProperty("btnLancamentos", String.valueOf(chLancamentos.isSelected()));
            config.setProperty("btnPagtoFuncionarios", String.valueOf(chPagamentosFuncionarios.isSelected()));




            FileOutputStream fos = new FileOutputStream(file);
            config.store(fos, "Configuração do Usuário: " + this.cmbTipoUsuario.getSelectedItem().toString() + "");
            
            fos.close();


            return true;

        } catch (IOException ex) {
            Logger.getLogger(ConfiguracaoIP.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }

    }
    
    /**
     * Popula combo com tipos de Usuário para AdmSystem
     */
     private void  populalistaTipoUser(){

        cmbTipoUsuario.addItem("userSystem");
        cmbTipoUsuario.addItem("admSystem");
        cmbTipoUsuario.addItem("professor");

    }
    
    /**
      * Popula Combo com tipos de usuário para user Root
      */
    private void  populalistaTipoUserForRoot(){

        cmbTipoUsuario.addItem("userSystem");
        cmbTipoUsuario.addItem("admSystem");
        cmbTipoUsuario.addItem("professor");
        cmbTipoUsuario.addItem("manut");
        cmbTipoUsuario.addItem("root");
  
    }
    
    /**
     * Inicializa dados do formulário
     */
    private void inicializa() {

        this.addWindowListener();
        if(user.getCategoriaUsuario().equals("admSystem")){
            this.populalistaTipoUser();
        }else if(user.getCategoriaUsuario().equals("root")){
            this.populalistaTipoUserForRoot();
        }
      
        TelaUteis.locateOnScreen(this, 1100, 720);
        this.carregaConfigUser();
        this.testaValorCheck();

    }
}
