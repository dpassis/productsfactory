/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Login.java
 *
 * Created on Feb 8, 2013, 10:55:32 AM
 */
package productsfactory.view;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import productsfactory.control.UsuarioControl;

import productsfactory.model.Usuario;
import productsfactory.useful.Conexao;

import productsfactory.useful.Manutencao;
import productsfactory.useful.TelaUteis;

/**
 *Formulário de Login do Sistema
 * 
 * @author Daniel
 */
public class Login extends javax.swing.JFrame implements KeyListener {

    /** Creates new form Login */
    public Login() {
        initComponents();
        inicializa();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogin = new interfacegrafica.dpa.panels.PanelDPA();
        pnlLoginDados = new interfacegrafica.dpa.panels.PanelTituloDPA("Login");
        lblLoginIcon = new interfacegrafica.dpa.labels.LabelDPA();
        lblUsuario = new interfacegrafica.dpa.labels.LabelDPA();
        lblSenha = new interfacegrafica.dpa.labels.LabelDPA();
        tfUsuario = new interfacegrafica.dpa.textfield.TextFieldDPA();
        pwfSenha = new interfacegrafica.dpa.password.PasswordFieldDPA();
        btnLogar = new interfacegrafica.dpa.buttons.ButtonSimplesDPA();
        btnCancelar = new interfacegrafica.dpa.buttons.ButtonSimplesDPA();
        lblObrigatorio1 = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();
        lblObrigatorio2 = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();
        lblRecuperaSenha = new interfacegrafica.dpa.labels.LabelMensagemAzulDPA();
        lblObrigatorios = new interfacegrafica.dpa.labels.LabelMensagemVermelholDPA();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);

        lblLoginIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productsfactory/images/lock.png"))); // NOI18N
        lblLoginIcon.setText("");

        lblUsuario.setText("Usuário:");

        lblSenha.setText("Senha:");

        tfUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfUsuarioKeyPressed(evt);
            }
        });

        pwfSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pwfSenhaKeyPressed(evt);
            }
        });

        btnLogar.setText("Logar");
        btnLogar.setFocusPainted(true);
        btnLogar.setFocusable(true);
        btnLogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogarActionPerformed(evt);
            }
        });
        btnLogar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLogarKeyPressed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setFocusPainted(true);
        btnCancelar.setFocusable(true);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelarKeyPressed(evt);
            }
        });

        lblObrigatorio1.setText("*");

        lblObrigatorio2.setText("*");

        javax.swing.GroupLayout pnlLoginDadosLayout = new javax.swing.GroupLayout(pnlLoginDados);
        pnlLoginDados.setLayout(pnlLoginDadosLayout);
        pnlLoginDadosLayout.setHorizontalGroup(
            pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLoginIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginDadosLayout.createSequentialGroup()
                        .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pwfSenha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblObrigatorio2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblObrigatorio1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlLoginDadosLayout.createSequentialGroup()
                        .addComponent(btnLogar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlLoginDadosLayout.setVerticalGroup(
            pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginDadosLayout.createSequentialGroup()
                .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginDadosLayout.createSequentialGroup()
                        .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLoginIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlLoginDadosLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblObrigatorio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pwfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblObrigatorio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginDadosLayout.createSequentialGroup()
                        .addContainerGap(146, Short.MAX_VALUE)
                        .addGroup(pnlLoginDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLogar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        lblRecuperaSenha.setText("Esqueceu sua senha?");
        lblRecuperaSenha.setToolTipText("Click aqui para recuperar sua senha.");
        lblRecuperaSenha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRecuperaSenhaMouseClicked(evt);
            }
        });

        lblObrigatorios.setText("(*) Campos Obrigatórios");

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlLoginDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                        .addComponent(lblRecuperaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                        .addComponent(lblObrigatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(pnlLoginDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblObrigatorios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRecuperaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(pnlLogin, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnLogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogarActionPerformed
    try {

        // TODO add your handling code here:
        this.conectaSistema();
    } catch (ParseException ex) {
        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);

    } catch (SQLException ex) {
        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
    }
    
     
        try {
            Menu menu = new Menu();
             menu.setVisible(true);
            menu.setExtendedState(MAXIMIZED_BOTH);


            Login.this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
                       
}//GEN-LAST:event_btnLogarActionPerformed

private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
// TODO add your handling code here:
    System.exit(0);
}//GEN-LAST:event_btnCancelarActionPerformed

private void lblRecuperaSenhaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRecuperaSenhaMouseClicked
// TODO add your handling code here:
    RecuperaSenha recuperaSenha = RecuperaSenha.getDialogRecuperaSenha();
    recuperaSenha.setVisible(true);
}//GEN-LAST:event_lblRecuperaSenhaMouseClicked

private void pwfSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pwfSenhaKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            this.conectaSistema();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);

        }

    }
}//GEN-LAST:event_pwfSenhaKeyPressed

private void tfUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsuarioKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            this.conectaSistema();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);

        }

    }
}//GEN-LAST:event_tfUsuarioKeyPressed

private void btnLogarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLogarKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            this.conectaSistema();
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);

        }

    }
}//GEN-LAST:event_btnLogarKeyPressed

private void btnCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyPressed
// TODO add your handling code here:
    System.exit(0);
}//GEN-LAST:event_btnCancelarKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private interfacegrafica.dpa.buttons.ButtonSimplesDPA btnCancelar;
    private interfacegrafica.dpa.buttons.ButtonSimplesDPA btnLogar;
    private interfacegrafica.dpa.labels.LabelDPA lblLoginIcon;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA lblObrigatorio1;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA lblObrigatorio2;
    private interfacegrafica.dpa.labels.LabelMensagemVermelholDPA lblObrigatorios;
    private interfacegrafica.dpa.labels.LabelMensagemAzulDPA lblRecuperaSenha;
    private interfacegrafica.dpa.labels.LabelDPA lblSenha;
    private interfacegrafica.dpa.labels.LabelDPA lblUsuario;
    private interfacegrafica.dpa.panels.PanelDPA pnlLogin;
    private interfacegrafica.dpa.panels.PanelTituloDPA pnlLoginDados;
    private interfacegrafica.dpa.password.PasswordFieldDPA pwfSenha;
    private interfacegrafica.dpa.textfield.TextFieldDPA tfUsuario;
    // End of variables declaration//GEN-END:variables

    /**
     * Faz a conexão do sistema com a base de dados
     * e controla o acesso ao Sistema
     * 
     * @throws SQLException
     * @throws ParseException 
     */
    private void conectaSistema() throws SQLException, ParseException {
        Manutencao manutencao = new Manutencao();


        if (!manutencao.userManutencao(this.tfUsuario.getText(), String.valueOf(this.pwfSenha.getPassword()))) {

            Connection con = null;

            if ((this.tfUsuario.getText().isEmpty()) || (String.valueOf(this.pwfSenha.getPassword()).isEmpty())) {
                JOptionPane.showMessageDialog(this, "Campo Usuário e Senha Obrigatórios", "Atenção!", 2);
            } else {

                con = Conexao.getInstance().getConnection(this.getDadosUsuario());

                if (con != null) {
                    if (UsuarioControl.verificarSenha(this.getDadosUsuario())) {
//                        PontoFuncionario pontoFuncionario = new PontoFuncionario();
//
//                        pontoFuncionario.setUsuario(UsuarioControl.getUsuario(this.getDadosUsuario()));
//                        pontoFuncionario.setDataCompleta(ControleUsuario.getDataCompleta());
//                        pontoFuncionario.setDataPonto(ControleUsuario.getData());
//                        pontoFuncionario.setHoraPonto(ControleUsuario.getHora());
//                        pontoFuncionario.setTipoPonto("Entrada no Sistema");
//                        ControleUsuario.inserePontoFuncionario(pontoFuncionario);

                        Menu menu = new Menu(UsuarioControl.getUsuario(this.getDadosUsuario()));
                        menu.setVisible(true);
                        menu.setExtendedState(MAXIMIZED_BOTH);


                        Login.this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Usuário não encontrado.", "Aviso", 1);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Verifique Usuário e Senha!!!", "Atenção!", 2);
                }
            }
        } else {
            Usuario usuario = new Usuario();
            usuario.setNomeUsuario("Manutenção");
            usuario.setCategoriaUsuario("manut");

            Menu menu = new Menu(usuario);
            menu.setVisible(true);
            menu.setExtendedState(MAXIMIZED_BOTH);
            Login.this.dispose();
        }
    }

    /**
     * Recupera dados do Usuário
     * 
     * @return objeto do tipo <code>Usuario</code>
     */
    private Usuario getDadosUsuario() {

        Usuario usuario = new Usuario();

        usuario.setNomeUsuario(this.tfUsuario.getText());
        usuario.setSenhaUsuario(String.valueOf(this.pwfSenha.getPassword()));

        return usuario;
    }

    /**
     * Faz as inicializaçõe do Sistema
     */
    private void inicializa() {

        TelaUteis.locateOnScreen(this, 540, 360);

    }

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void keyPressed(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                this.conectaSistema();
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);

            }

        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
