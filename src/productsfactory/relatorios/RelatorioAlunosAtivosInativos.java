/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RelatorioAlunosAtivosInativos.java
 *
 * Created on 18/04/2013, 21:49:43
 */
package productsfactory.relatorios;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.sql.Connection;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import productsfactory.model.Usuario;
import productsfactory.useful.Conexao;

/**
 *
 * @author Daniel
 */
public class RelatorioAlunosAtivosInativos extends javax.swing.JDialog {
    private static RelatorioAlunosAtivosInativos jDialogReport = null;

    public static RelatorioAlunosAtivosInativos getDialogAlunos(java.awt.Frame janela,boolean modal) {

        if (jDialogReport == null) {
            jDialogReport = new RelatorioAlunosAtivosInativos(janela, modal);
        }
        return jDialogReport;
    }
    /** Creates new form RelatorioAlunosAtivosInativos */
    public RelatorioAlunosAtivosInativos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        addWindowListener();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
public void geraRelatorio(String status) {  
        try {
            
               Connection con = Conexao.getInstance().getConnection(Usuario.getUserInstance());
           
               HashMap parametros = new HashMap();
               JasperPrint jp;
               URL arquivo = getClass().getResource("/sistemaoficinamusica/report/alunosAtivosInativos.jasper");
               JasperReport jr = (JasperReport) JRLoader.loadObject(arquivo);
               
               URL img = getClass().getResource("/sistemaoficinamusica/images/logo_report.jpg");

               String imagem = img.toString();
               parametros.put("logo", imagem);
               parametros.put("status", status);


               jp = JasperFillManager.fillReport(jr,parametros ,con);
               
               if (jp.getPages().isEmpty()) {
                   JOptionPane.showMessageDialog(this, "Não há conteúdo no relatório. A visualização foi cancelada", "Relatório vazio", JOptionPane.INFORMATION_MESSAGE);
               }
               else{
                   JasperViewer jpv = new JasperViewer(jp, false);
                   jpv.setTitle("Alunos Ativos/Inativos");
                   jpv.setAlwaysOnTop(true);
                   jpv.setVisible(true);
               }
        } catch (JRException ex) {
            Logger.getLogger(RelatorioAlunosAtivosInativos.class.getName()).log(Level.SEVERE, null, ex);
        }
     
}

private void addWindowListener() {

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent evt) {
                System.gc();
                jDialogReport = null;
            }
        });
    }

}
